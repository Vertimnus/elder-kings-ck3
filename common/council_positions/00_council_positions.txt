### EK EDIT: Removed references to vanilla cultures & religions

councillor_chancellor = {
	skill = diplomacy
	
	name = councillor_chancellor

	tooltip = game_concept_chancellor_desc

	modifier = {
		name = councillor_chancellor_modifier
		fellow_vassal_opinion = 5
		monthly_diplomacy_lifestyle_xp_gain_mult = 0.05
		scale = council_scaled_by_liege_tier
	}

	modifier = {
		name = councillor_chancellor_modifier
		monthly_prestige = 1
		scale = council_scaled_monthly_income
	}

	council_owner_modifier = {
		name = learn_on_the_job_modifier
		diplomacy = 1
		scale = chancellor_learn_on_the_job_scale
	}

	valid_character = {
		exists = root.liege_or_court_owner
		can_be_chancellor_trigger = { COURT_OWNER = root.liege_or_court_owner }
	}

	on_get_position = {
		got_council_position_effect = yes
	}

	on_fired_from_position = {
		fired_from_council_position_effect = yes
	}

	portrait_animation = chancellor
}

councillor_steward = {
	skill = stewardship
	
	name = councillor_steward
	tooltip = game_concept_steward_desc
	
	modifier = {
		name = councillor_steward_modifier
		monthly_income = 1
		scale = council_scaled_monthly_income
	}

	modifier = {
		name = councillor_steward_modifier
		build_gold_cost = -0.05
		monthly_stewardship_lifestyle_xp_gain_mult = 0.05
		domain_tax_mult = 0.05
		scale = council_scaled_by_liege_tier
	}

	council_owner_modifier = {
		name = learn_on_the_job_modifier
		stewardship = 1
		scale = steward_learn_on_the_job_scale
	}

	valid_character = {
		exists = root.liege_or_court_owner
		can_be_steward_trigger = { COURT_OWNER = root.liege_or_court_owner }
	}

	on_get_position = {
		got_council_position_effect = yes
	}

	on_fired_from_position = {
		fired_from_council_position_effect = yes
	}

	portrait_animation = steward
}

councillor_marshal = {
	skill = martial
	
	name = councillor_marshal
	tooltip = game_concept_marshal_desc

	modifier = {
		name = councillor_marshal_modifier
		prowess = 1
		army_maintenance_mult = -0.05
		monthly_martial_lifestyle_xp_gain_mult = 0.05
		levy_size = 0.05
		scale = council_scaled_by_liege_tier
	}

	council_owner_modifier = {
		name = learn_on_the_job_modifier
		martial = 1
		scale = marshal_learn_on_the_job_scale
	}

	valid_character = {
		exists = root.liege_or_court_owner
		can_be_marshal_trigger = { COURT_OWNER = root.liege_or_court_owner }
	}

	on_get_position = {
		got_council_position_effect = yes
	}

	on_fired_from_position = {
		fired_from_council_position_effect = yes
	}

	portrait_animation = marshal
}

councillor_spymaster = {
	skill = intrigue
	
	name = councillor_spymaster
	tooltip = game_concept_spymaster_desc

	modifier = {
		name = councillor_spymaster_modifier
		hostile_scheme_power_add = 5
		owned_hostile_scheme_success_chance_add = 2
		monthly_intrigue_lifestyle_xp_gain_mult = 0.05
		dread_baseline_add = 10
		scale = council_scaled_by_liege_tier
	}

	council_owner_modifier = {
		name = learn_on_the_job_modifier
		intrigue = 1
		scale = spymaster_learn_on_the_job_scale
	}

	valid_character = {
		exists = root.liege_or_court_owner
		can_be_spymaster_trigger = { COURT_OWNER = root.liege_or_court_owner }
	}

	on_get_position = {
		got_council_position_effect = yes
	}

	on_fired_from_position = {
		fired_from_council_position_effect = yes
	}
	
	use_for_scheme_power = yes
	use_for_scheme_resistance = yes

	portrait_animation = spymaster
}

councillor_court_chaplain = {
	skill = learning

	auto_fill = yes
	can_fire = {
		custom_description = {
			text = "court_chaplain_cant_fire_doctrines"
			faith = {
				NOT = {
					has_doctrine_parameter = clerical_appointment_fixed
				}
			}
		}
	}
	
	can_reassign = {
		custom_description = {
			text = "court_chaplain_cant_reassign_doctrines"
			faith = {
				has_doctrine_parameter = clerical_appointment_ruler
			}
		}
	}
	
	can_change_once = {
		faith = {
			has_doctrine_parameter = clerical_appointment_fixed
		}
	}
	
	inherit = no
	fill_from_pool = yes
	
	councillor_cooldown_days = {
		value = 0
		if = {
			limit = {
				faith = {
					NOT = {
						has_doctrine_parameter = clerical_appointment_fixed
					}
				}
			}
			add = 3650
		}
	}
	
	name = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:councillor_liege.faith = { has_doctrine = doctrine_theocracy_temporal }
				}
				desc = actual_bishop_title
			}
			# triggered_desc = {
				# trigger = {
					# NOT = { scope:councillor_liege.faith = { has_doctrine = doctrine_theocracy_temporal } }
				# }
				# desc = {
					# first_valid = {
						# Shia
						# triggered_desc = {
							# trigger = { scope:councillor_liege.highest_held_title_tier >= tier_empire faith = faith:ismaili }
							# desc = councillor_court_chaplain_ismaili_empire
						# }
						# triggered_desc = {
							# trigger = { scope:councillor_liege.highest_held_title_tier >= tier_kingdom faith = faith:ismaili }
							# desc = councillor_court_chaplain_ismaili_kingdom
						# }
						# Islam
						# triggered_desc = {
							# trigger = { scope:councillor_liege.highest_held_title_tier >= tier_empire faith.religion = faith:ashari.religion }
							# desc = councillor_court_chaplain_islam_empire
						# }
						# triggered_desc = {
							# trigger = { scope:councillor_liege.highest_held_title_tier >= tier_kingdom faith.religion = faith:ashari.religion }
							# desc = councillor_court_chaplain_islam_kingdom
						# }
						# triggered_desc = {
							# trigger = { scope:councillor_liege.highest_held_title_tier >= tier_duchy faith.religion = faith:ashari.religion }
							# desc = councillor_court_chaplain_islam_duchy
						# }
						# triggered_desc = {
							# trigger = { scope:councillor_liege.highest_held_title_tier < tier_duchy faith.religion = faith:ashari.religion }
							# desc = councillor_court_chaplain_islam_county
						# }
						# Yazidi
						# triggered_desc = {
							# trigger = { scope:councillor_liege.highest_held_title_tier >= tier_empire faith.religion = faith:yazidi.religion }
							# desc = councillor_court_chaplain_yazidi_empire
						# }
						# triggered_desc = {
							# trigger = { scope:councillor_liege.highest_held_title_tier >= tier_kingdom faith.religion = faith:yazidi.religion }
							# desc = councillor_court_chaplain_yazidi_kingdom
						# }
						# triggered_desc = {
							# trigger = { scope:councillor_liege.highest_held_title_tier >= tier_duchy faith.religion = faith:yazidi.religion }
							# desc = councillor_court_chaplain_yazidi_duchy
						# }
						# triggered_desc = {
							# trigger = { scope:councillor_liege.highest_held_title_tier < tier_duchy faith.religion = faith:yazidi.religion }
							# desc = councillor_court_chaplain_yazidi_county
						# }
						# desc = councillor_court_chaplain
					# }

				# }
			# }
			desc = councillor_court_chaplain
		}
	}

	tooltip = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:councillor_liege.faith = { has_doctrine = doctrine_theocracy_temporal }
				}
				desc = game_concept_realm_priest_desc
			}
			desc = game_concept_court_chaplain_desc
		}
	}

	modifier = {
		name = councillor_court_chaplain_modifier
		county_opinion_add = 5
		monthly_learning_lifestyle_xp_gain_mult = 0.05
		scale = council_scaled_by_liege_tier
	}

	modifier = {
		name = councillor_court_chaplain_modifier
		monthly_piety = 1
		scale = council_scaled_monthly_income
	}

	council_owner_modifier = {
		name = learn_on_the_job_modifier
		learning = 1
		scale = court_chaplain_learn_on_the_job_scale
	}

	pool_character_config = pool_court_chaplain
	
	valid_character = {
		exists = root.liege_or_court_owner
		can_be_court_chaplain_trigger = { COURT_OWNER = root.liege_or_court_owner }
	}

	on_get_position = {
		got_council_position_effect = yes
	}

	on_fired_from_position = {
		fired_from_council_position_effect = yes
	}

	portrait_animation = chaplain
}

councillor_spouse = {
	special_council_position = yes
	auto_fill = yes
	can_fire = no
	can_reassign = no
	
	### EK EDIT: Removed like 2000 lines of vanilla cultural stuff
	name = {
		first_valid = {
			triggered_desc = {
				trigger = { is_male = yes }
				desc = {
					first_valid = {
						#Tribal Default
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_empire
								scope:councillor_liege = { has_government = tribal_government }
							}
							desc = emperor_tribal_male
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_kingdom
								scope:councillor_liege = { has_government = tribal_government }
							}
							desc = king_tribal_male
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_duchy
								scope:councillor_liege = { has_government = tribal_government }
							}
							desc = duke_tribal_male
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_county
								scope:councillor_liege = { has_government = tribal_government }
							}
							desc = count_tribal_male
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_barony
								scope:councillor_liege = { has_government = tribal_government }
							}
							desc = baron_tribal_male
						}
						#Clan Default
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_empire
								scope:councillor_liege = { has_government = clan_government	}
							}
							desc = emperor_clan_male
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_kingdom
								scope:councillor_liege = { has_government = clan_government	}
							}
							desc = king_clan_male
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_duchy
								scope:councillor_liege = { has_government = clan_government	}
							}
							desc = duke_clan_male
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_county
								scope:councillor_liege = { has_government = clan_government	}
							}
							desc = count_clan_male
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_barony
								scope:councillor_liege = { has_government = clan_government	}
							}
							desc = baron_clan_male
						}
						#Republic Default
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_empire
								scope:councillor_liege = { has_government = republic_government	}
							}
							desc = emperor_republic_male
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_kingdom
								scope:councillor_liege = { has_government = republic_government	}
							}
							desc = king_republic_male
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_duchy
								scope:councillor_liege = { has_government = republic_government	}
							}
							desc = duke_republic_male
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_county
								scope:councillor_liege = { has_government = republic_government	}
							}
							desc = count_republic_male
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_barony
								scope:councillor_liege = { has_government = republic_government	}
							}
							desc = baron_republic_male
						}

						#Feudal/Default Fallback
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_empire
								scope:councillor_liege = {
									NOR = { #The following governments have "Spouses"
										has_government = theocracy_government
										has_government = mercenary_government
										has_government = holy_order_government
										
									}
								}
							}
							desc = councillor_spouse_emperor
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_kingdom
								scope:councillor_liege = {
									NOR = { #The following governments have "Spouses"
										has_government = theocracy_government
										has_government = mercenary_government
										has_government = holy_order_government
										
									}
								}
							}
							desc = councillor_spouse_king
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_duchy
								scope:councillor_liege = {
									NOR = { #The following governments have "Spouses"
										has_government = theocracy_government
										has_government = mercenary_government
										has_government = holy_order_government
										
									}
								}
							}
							desc = councillor_spouse_duke
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_county
								scope:councillor_liege = {
									NOR = { #The following governments have "Spouses"
										has_government = theocracy_government
										has_government = mercenary_government
										has_government = holy_order_government
										
									}
								}
							}
							desc = councillor_spouse_count
						}
						triggered_desc = {
							trigger = {
								scope:councillor_liege.highest_held_title_tier = tier_barony
								scope:councillor_liege = {
									NOR = { #The following governments have "Spouses"
										has_government = theocracy_government
										has_government = mercenary_government
										has_government = holy_order_government
										
									}
								}
							}
							desc = councillor_spouse_baron
						}
						triggered_desc = {
							trigger = { scope:councillor_liege.highest_held_title_tier >= tier_kingdom }
							desc = councillor_spouse_prince_consort
						}
						desc = councillor_spouse_husband
					}
				}
			}
			desc = {
				first_valid = {
					#Tribal Default
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_empire
							scope:councillor_liege = { has_government = tribal_government }
						}
						desc = emperor_tribal_female
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_kingdom
							scope:councillor_liege = { has_government = tribal_government }
						}
						desc = king_tribal_female
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_duchy
							scope:councillor_liege = { has_government = tribal_government }
						}
						desc = duke_tribal_female
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_county
							scope:councillor_liege = { has_government = tribal_government }
						}
						desc = count_tribal_female
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_barony
							scope:councillor_liege = { has_government = tribal_government }
						}
						desc = baron_tribal_female
					}
					#Clan Default
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_empire
							scope:councillor_liege = { has_government = clan_government	}
						}
						desc = emperor_clan_female
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_kingdom
							scope:councillor_liege = { has_government = clan_government	}
						}
						desc = king_clan_female
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_duchy
							scope:councillor_liege = { has_government = clan_government	}
						}
						desc = duke_clan_female
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_county
							scope:councillor_liege = { has_government = clan_government	}
						}
						desc = count_clan_female
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_barony
							scope:councillor_liege = { has_government = clan_government	}
						}
						desc = baron_clan_female
					}
					#Republic Default
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_empire
							scope:councillor_liege = { has_government = republic_government	}
						}
						desc = emperor_republic_female
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_kingdom
							scope:councillor_liege = { has_government = republic_government	}
						}
						desc = king_republic_female
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_duchy
							scope:councillor_liege = { has_government = republic_government	}
						}
						desc = duke_republic_female
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_county
							scope:councillor_liege = { has_government = republic_government	}
						}
						desc = count_republic_female
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_barony
							scope:councillor_liege = { has_government = republic_government	}
						}
						desc = baron_republic_female
					}

					#Feudal/Default Fallback
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_empire
							scope:councillor_liege = {
								NOR = { #The following governments have "Spouses"
									has_government = theocracy_government
									has_government = mercenary_government
									has_government = holy_order_government
									
								}
							}
						}
						desc = councillor_spouse_empress
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_kingdom
							scope:councillor_liege = {
								NOR = { #The following governments have "Spouses"
									has_government = theocracy_government
									has_government = mercenary_government
									has_government = holy_order_government
									
								}
							}
						}
						desc = councillor_spouse_queen
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_duchy
							scope:councillor_liege = {
								NOR = { #The following governments have "Spouses"
									has_government = theocracy_government
									has_government = mercenary_government
									has_government = holy_order_government
									
								}
							}
						}
						desc = councillor_spouse_duchess
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_county
							scope:councillor_liege = {
								NOR = { #The following governments have "Spouses"
									has_government = theocracy_government
									has_government = mercenary_government
									has_government = holy_order_government
									
								}
							}
						}
						desc = councillor_spouse_countess
					}
					triggered_desc = {
						trigger = {
							scope:councillor_liege.highest_held_title_tier = tier_barony
							scope:councillor_liege = {
								NOR = { #The following governments have "Spouses"
									has_government = theocracy_government
									has_government = mercenary_government
									has_government = holy_order_government
									
								}
							}
						}
						desc = councillor_spouse_baroness
					}
					desc = councillor_spouse
				}
			}
		}
	}

	tooltip = game_concept_spouse_desc

	valid_position = {
		any_spouse = {
			OR = {
				court_owner = root
				AND = {
					is_ruler = yes
					exists = liege
					liege = root
				}
			}
		}
	}

	valid_character = {
		exists = liege
		can_be_spouse_councillor_trigger = { COUNCIL_OWNER = liege }
	}

	on_get_position = {
		set_variable = {
			name = councillor_spouse_lifestyle_progress
			value = 0
		}
		# if = {
			# limit = {
				# primary_spouse.primary_title = title:e_hre
			# }
			# debug_log = "Set new Spouse council position"
			# debug_log_scopes = yes
		# }
		trigger_event = councillor_spouse_background.0001
	}

	on_lose_position = {
		remove_variable = councillor_spouse_lifestyle_progress
	}

	on_fired_from_position = {
		remove_variable = councillor_spouse_lifestyle_progress
	}
}

councillor_court_mage = {

	name = councillor_court_mage # What name to use. Be aware that when a position is unfilled, name_of_the_position is used instead
	# name = { # Alternatively, you can use triggered loc. SCOPE is the character, event target 'councillor_liege' is the council owner. If no character is provided, we fall back to the key of the position rather than going through triggered loc
	# 	first_valid = { ... }
	# }
	# You also need to define the loc key post-fixed with "_possessive" if "special_council_position = yes" is not set (special council positions do not support possessive versions at this time). If you're combining two or more strings using the dynamic description system, only the last key needs "_possessive" defined

	# Modifier applied to the character in this position. Can take a "scale" parameter to scale by (a script value; see _script_values.info). Up to 5 of these can be defined if more than one scale is necessary
	# modifier = {
	# }

	# Modifier applied to the liege of the character in this position. Can take a "scale" parameter to scale by (a script value; see _script_values.info). Up to 5 of these can be defined if more than one scale is necessary
	# council_owner_modifier = {
	# }
	
	# Is this an available position for this council [SCOPE is the CHARACTER owner of the council]
	# valid_position = {

	# }

	# Is this a valid position for a character. [SCOPE is the character applying to the position]
	valid_character = {
		exists = root.liege_or_court_owner
		#can_be_court_mage_trigger = { COURT_OWNER = root.liege_or_court_owner }
	}

	# Effect applied when a character gets this position. [SCOPE is the character applying to the position]
	on_get_position = {
		got_council_position_effect = yes
	}

	# Effect applied when a character lose the position. [SCOPE is the character in the position]
	# on_lose_position = {
	
	# }

	# Effect applied when a character is fired from the position. [SCOPE is the character in the position]
	on_fired_from_position = {
		fired_from_council_position_effect = yes
	}

	# Max number of positions for this type. For modders. Default 1. Infinite 0 or negative.
	#max_amount = 2
	
	#use_for_scheme_power = yes/no
	#use_for_scheme_resistance = yes/no
	
	# Which portrait animation should councillors of this type use in the council window
	#portrait_animation = chaplain
}