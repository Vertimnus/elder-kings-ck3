######################################################################
# Government
######################################################################

building_requirement_tribal = {
	scope:holder = {
		has_government = tribal_government
	}
}

building_requirement_tribal_holding_in_county = {
	county = {
		any_county_province = {
			has_holding_type = tribal_holding
		}
	}
}

### EK EDIT: Added triggers for different governments
building_requirement_feudal = {
	scope:holder = {
		has_government = feudal_government
	}
}

building_requirement_republic = {
	scope:holder = {
		has_government = republic_government
	}
}

building_requirement_tribal = {
	scope:holder = {
		has_government = tribal_government
	}
}

building_requirement_theocracy = {
	scope:holder = {
		has_government = theocracy_government
	}
}

building_requirement_clan = {
	scope:holder = {
		has_government = clan_government
	}
}

building_requirement_mercenary = {
	scope:holder = {
		has_government = mercenary_government
	}
}

building_requirement_holy_order = {
	scope:holder = {
		has_government = holy_order_government
	}
}

building_not_buildable_any_government = {
	scope:holder = {
		OR = {
			has_government = feudal_government
			has_government = republic_government
			has_government = tribal_government
			has_government = theocracy_government
			has_government = clan_government
			has_government = mercenary_government
			has_government = holy_order_government
		}
	}
}

######################################################################
# Holding Level
######################################################################

building_requirement_castle_city_church = {
	trigger_if = {
		limit = { has_holding_type = castle_holding }
		has_building_or_higher = castle_$LEVEL$
	}
	trigger_else_if = {
		limit = { has_holding_type = city_holding }
		has_building_or_higher = city_$LEVEL$
	}
	trigger_else_if = {
		limit = { has_holding_type = church_holding }
		has_building_or_higher = temple_$LEVEL$
	}
	### EK EDIT:tower_holding
	trigger_else_if = {
		limit = { has_holding_type = tower_holding }
		has_building_or_higher = tower_$LEVEL$
	}
	trigger_else = {
		custom_description = {
			text = "building_requirement_castle_city_church_failed"
			always = no
		}
	}
}

######################################################################
# Special
######################################################################

### EK EDIT: Hall of Heroes are disabled
building_hall_of_heroes_requirement = {
	always = no
	# custom_description = {
		# text = building_requirement_hall_of_heroes_failed
		# has_variable = hall_of_heroes
		# scope:holder = {
			# OR = {
				# has_religion = religion:baltic_religion
				# has_religion = religion:slavic_religion
				# has_religion = religion:finno_ugric_religion
				# has_religion = religion:siberian_religion
			# }
		# }
	# }
}

### EK EDIT: Universities might be changed into big mages colleges at one point
building_university_requirement = {
	has_variable = university
}

######################################################################
# Terrain
######################################################################
### EK TODO: See what fits for Ashlands, Volcanic, Mangrove Swamps, Valen Woods, Wastelands, 

building_common_tradeport_requirement_terrain = {
	is_coastal = yes
	#OR = {
	#	terrain = plains
	#	terrain = steppe
	#	terrain = desert
	#	terrain = drylands
	#	terrain = oasis
	#	terrain = farmlands
	#	terrain = floodplains
	#}
}

### EK EDIT: We don't have such a region
building_pastures_requirement_terrain = {
	OR = {
		terrain = farmlands
		terrain = plains
		terrain = steppe
		terrain = desert
		terrain = alikr_desert
		terrain = drylands
		terrain = oasis
		terrain = mountains
		terrain = desert_mountains
		terrain = hills
		terrain = desert_hills
		terrain = floodplains
		# AND = {
			# terrain = jungle
			# NOT = { geographical_region = world_innovation_elephants }
		# }
	}
}

building_hunting_grounds_requirement_terrain = {
	OR = {
		terrain = plains
		terrain = drylands
		terrain = steppe
		terrain = hills
		terrain = desert_hills
		terrain = taiga
		terrain = tundra
		terrain = taiga_hills
		terrain = forest
		terrain = jungle
		terrain = wetlands
	}
}

building_orchards_requirement_terrain = {
	OR = {
		terrain = floodplains
		terrain = oasis
	}
}

building_farm_estates_requirement_terrain = {
	terrain = farmlands
}

building_military_camps_requirement_terrain = {
	OR = {
		terrain = farmlands
		terrain = plains
		terrain = drylands
		terrain = desert
		terrain = alikr_desert
		terrain = oasis
		terrain = floodplains
		terrain = steppe
		terrain = mountains
		terrain = desert_mountains
		terrain = wetlands
		terrain = forest
		terrain = taiga
		terrain = tundra
		terrain = taiga_hills
		terrain = jungle
		terrain = hills
		terrain = desert_hills
	}
}

building_regimental_grounds_requirement_terrain = {
	OR = {
		terrain = floodplains
		terrain = farmlands
	}
}

building_ramparts_requirement_terrain = {
	OR = {
		terrain = taiga
		terrain = tundra
		terrain = forest
	}
}

building_curtain_walls_requirement_terrain = {
	OR = {
		terrain = farmlands
		terrain = plains
		terrain = wetlands
	}
}

building_watchtowers_requirement_terrain = {
	OR = {
		terrain = desert
		terrain = alikr_desert
		terrain = drylands
		terrain = oasis
		terrain = floodplains
		terrain = jungle
		terrain = steppe
	}
}

building_cereal_fields_requirement_terrain = {
	OR = {
		terrain = farmlands
		terrain = plains
		terrain = drylands
		terrain = floodplains
	}
}

building_outposts_requirement_terrain = {
	OR = {
		terrain = steppe
		terrain = wetlands
		terrain = taiga
		terrain = tundra
		terrain = taiga_hills
		terrain = forest
		terrain = jungle
		terrain = mountains
		terrain = desert_mountains
		terrain = desert
		terrain = alikr_desert
	}
}

building_barracks_requirement_terrain = {
	OR = {
		terrain = farmlands
		terrain = plains
		terrain = drylands
		terrain = hills
		terrain = desert_hills
		terrain = mountains
		terrain = forest
		terrain = taiga
		terrain = tundra
		terrain = taiga_hills
		terrain = jungle
		terrain = wetlands
		terrain = steppe
	}
}

building_camel_farms_requirement_terrain = {
	OR = {
		terrain = desert
		terrain = desert_hills
		terrain = alikr_desert
		terrain = desert_mountains
		terrain = oasis
		terrain = floodplains
	}
}

building_logging_camps_requirement_terrain = {
	OR = {
		terrain = taiga
		terrain = tundra
		terrain = taiga_hills
		terrain = forest
		terrain = jungle
	}
}

building_peat_quarries_requirement_terrain = {
	terrain = wetlands
}

building_hill_farms_requirement_terrain = {
	terrain = hills
	terrain = desert_hills
	terrain = taiga_hills
}

### EK EDIT: No such region
building_elephant_pens_requirement_terrain = {
	terrain = jungle
	# geographical_region = world_innovation_elephants
}

building_plantations_requirement_terrain = {
	OR = {
		terrain = drylands
		terrain = desert
		terrain = alikr_desert
		terrain = oasis
	}
}

building_quarries_requirement_terrain = {
	OR = {
		terrain = mountains
		terrain = desert_mountains
	}
}

building_hill_forts_requirement_terrain = {
	OR = {
		terrain = mountains
		terrain = desert_mountains
		terrain = hills
		terrain = desert_hills
		terrain = taiga_hills
	}
}

######################################################################
# Baronies that cannot have a holding (intended for Sahara)
######################################################################

### EK TODO: Maybe use it?
barony_cannot_construct_holding = {
	always = no
	# OR = {
		# barony = title:b_hamadat_tinghert
		# barony = title:b_tidikelt
		# barony = title:b_wadi_irawan
		# barony = title:b_erg_ghati
	# }
}

######################################################################
# You shouldn't be able to hold everything and get by with MaA/Knights
######################################################################

building_disable_if_vastly_over_domain_limit_trigger = {
	custom_description = {
		text = vastly_over_domain_limit_trigger
		scope:holder = {
			trigger_if = {
				limit = {
					is_ai = no
				}
				domain_size_excluding_grace_period < building_disable_inefficient_value
			}
		}
	}
}
