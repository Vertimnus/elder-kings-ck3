### Raise Risen Dead
# Unlocked by: Risen Dead (Necromancy)
raise_risen_dead_decision = {
	ai_check_interval = 0
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

	desc = raise_risen_dead_decision_desc

	selection_tooltip = raise_risen_dead_decision_tooltip

	cooldown = { days = 365 }

	is_shown = {
		has_perk = risen_dead_perk
		is_at_war = yes
	}

	is_valid_showing_failures_only = {
		number_maa_regiments_of_type = {
			type = risen_dead
			value = 0
		}
	}

	is_valid = {
		has_perk = risen_dead_perk
	}

	effect = {
		if = {
			limit = {
				secret_necromancer_is_valid_trigger = { OWNER = this }
				NOT = { any_secret = { secret_type = secret_necromancer } }
				trait_is_shunned_or_criminal_in_my_or_lieges_faith_trigger = { TRAIT = necromancer GENDER_CHARACTER = scope:secret_getter }
			}
			custom_tooltip = decision_gives_necromancer_secret_tt
		}
		give_necromancer_secret_or_trait_effect = yes
		spawn_army = {
			men_at_arms = {
				type = risen_dead
				stacks = 1
			}
			location = capital_province
		}
	}
	
	ai_potential = {
		always = no
	}

	ai_will_do = {
		base = 0
	}
}

### Commune with a loved one
commune_with_loved_one_best_friend_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

	desc = commune_with_loved_one_best_friend_decision_desc
	selection_tooltip = commune_with_loved_one_best_friend_decision_tooltip

	is_shown = {
		is_ai = no
		has_variable = best_friend_to_commune
	}

	is_valid = {
	}

	is_valid_showing_failures_only = {

	}

	effect = {
		custom_tooltip = commune_with_loved_one_best_friend_tooltip
		trigger_event = ek_lifestyles.0002
	}

	ai_check_interval = 36
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}
commune_with_loved_one_soulmate_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

	desc = commune_with_loved_one_soulmate_decision_desc
	selection_tooltip = commune_with_loved_one_soulmate_decision_tooltip

	is_shown = {
		is_ai = no
		has_variable = soulmate_to_commune
	}

	is_valid = {
	}

	is_valid_showing_failures_only = {

	}

	effect = {
		custom_tooltip = commune_with_loved_one_soulmate_tooltip
		trigger_event = ek_lifestyles.0003
	}

	ai_check_interval = 36
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}