#should eventually have everything from ek1 excepting artifacts
#ardor costs scaled down by 2.5 w/ 10000 as soft max for progress bar if that ever works
#ai may be restricted to chosen patron(s) as keeping track of 16+ ardor variables may bloat saves
#   -implement fully and see how plays - check vanilla for variables too
#   -access to more than a few patrons may also be uncommon - consider edge cases
#   -great boons should only be available to cults. three tiers:
#       -worship from bargains/legal worship -> part of pantheon -> cult religion
#       -part of pantheon should be default w/ cult getting major boons & slight discount, bargains should have moderate cost inflation

# based on select_personal_deity_decision
patron_select_patron_decision = {
    picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

    desc = patron_select_patron_decision_desc
    selection_tooltip = patron_select_patron_decision_tooltip

    is_shown = {
        is_adult = yes
        is_ruler = yes
        is_ai = yes
        has_active_patron_selected = no
        patron_has_princes = yes
    }

    is_valid = {
    }

    is_valid_showing_failures_only = {
    }

    effect = {
        custom_tooltip = select_personal_deity_decision_tt
        trigger_event = patron_decision.001
    }

    ai_check_interval = 96

    ai_potential = {
        piety >= minor_piety_value
        patron_has_any_trait = no
    }

    ai_will_do = {
        base = 100
    }
}

##########
# Shared #
##########

# Shared Offerings #

#gold offer
#piety/prestige offer? festival in [daedraname]'s honor? - mildest cost if cult religion, milder if pantheon
#sacrifice

patron_offer_gold_decision = {
    picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

    desc = patron_offer_gold_decision_desc
    # selection_tooltip = patron_offer_gold_decision_tooltip
    selection_tooltip = patron_offer_gold_decision_

    ai_check_interval = 3

    is_shown = {
        is_adult = yes
        is_ruler = yes
        OR = {
            AND = {
                #is_ai = no
                has_active_patron_selected = yes
            }
            # AND = {
            #     is_ai = yes
            #     patron_has_princes = yes
            # }
        }
    }

    cooldown = { days = 5 } #365 }

    is_valid_showing_failures_only = {
        short_term_gold >= 50
        #NOT = { var:ardor_display >= 10000 }
    }

    effect = {
        #show_as_tooltip = { #The effect is actually applied in the event itself
        remove_short_term_gold = 50
        #}
        # custom_description = {
        #     text = patron_ardor_change
        #     value = medium_ardor_value #doesnt auto detect value
        #     change_variable = { name = ardor_display add = medium_ardor_value }
        # }
        # patron_ardor_update_actual = yes
        patron_ardor_change = { ARDOR = medium_ardor_value }
    }

    ai_potential = { #should be able to eventually may handle seperatly
        always = yes
    }

    ai_will_do = {
        base = 5
    }
}

patron_offer_sacrifice_decision = {
    picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

    desc = patron_offer_sacrifice_decision_desc
    # selection_tooltip = patron_offer_sacrifice_decision_tooltip
    selection_tooltip = patron_offer_sacrifice_decision_

    ai_check_interval = 3

    is_shown = {
        is_adult = yes
        is_ruler = yes
        OR = {
            AND = {
                #is_ai = no
                has_active_patron_selected = yes
                trigger_if = {
                    limit = { exists = var:patron_shown }
                    NOR = { #dont care for human sacrifice, based on ek1
                        var:patron_shown = flag:azura
                        var:patron_shown = flag:meridia
                        var:patron_shown = flag:sanguine
                    }
                }
                trigger_else = { always = no }
            }
            # AND = {
            #     is_ai = yes
            #     patron_has_princes = yes
            # }
        }
    }

    cooldown = { days = 365 }

    is_valid_showing_failures_only = {
        any_prisoner = {
            is_adult = yes
            NOT = { any_heir_title = { count > 0 } }
        }
        #NOT = { var:ardor_display >= 10000 }
    }

    effect = {
        random_prisoner = {
            limit = {
                is_imprisoned_by = ROOT
                is_adult = yes
                NOT = { any_heir_title = { count > 0 } }
            }
            if = {
                limit = {
                    ROOT = {
                        exists = var:patron_shown
                        var:patron_shown = flag:namira
                    }
                }
                death = { killer = ROOT death_reason = death_eaten }
            }
            else = {
                death = { killer = ROOT death_reason = death_execution_blot }
            }
        }
        # custom_description = {
        #     text = patron_ardor_change
        #     value = major_ardor_value #doesnt auto detect value
        #     change_variable = { name = ardor_display add = major_ardor_value }
        # }
        # patron_ardor_update_actual = yes
        patron_ardor_change = { ARDOR = major_ardor_value }
    }

    ai_potential = { #should be able to eventually may handle seperatly
        always = yes
    }

    ai_will_do = {
        base = 1
    }
}

# Shared Boons #

# stat boost max 5-8
# wealth of oblivion - exchange piety/prestige?
# small horde as mma?
# large horde
# kynmarcher knight
# aura dispair +dread

patron_boon_gold_decision = { #750
    picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

    desc = patron_boon_gold_decision_desc
    # selection_tooltip = patron_boon_gold_decision_tooltip
    selection_tooltip = patron_boon_gold_decision_

    ai_check_interval = 3

    is_shown = {
        is_adult = yes
        is_ruler = yes
        OR = {
            AND = {
                #is_ai = no
                has_active_patron_selected = yes
            }
            # AND = {
            #     is_ai = yes
            #     patron_has_princes = yes
            # }
        }
    }

    cooldown = { days = 5 } #365 }

    is_valid_showing_failures_only = {
        #	short_term_gold >= 50
        # custom_description = {
        #     text = insufficient_ardor
        #     value = medium_ardor_value_double
        #     var:ardor_display >= medium_ardor_value_double
        # }
        #patron_has_ardor = { ARDOR = medium_ardor_value_double }
    }

    effect = {
        #show_as_tooltip = { #The effect is actually applied in the event itself
        add_gold = 50
        #}
        #patron_gain_favor_effect = yes
        # custom_description = {
        #     text = patron_ardor_change
        #     value = neg_medium_ardor_value_double #doesnt auto detect value
        #     change_variable = { name = ardor_display subtract = medium_ardor_value_double }
        # }
        # patron_ardor_update_actual = yes
        patron_ardor_change = { ARDOR = neg_medium_ardor_value_double }
    }

    ai_potential = { #should be able to eventually may handle seperatly
        always = yes
    }

    ai_will_do = {
        base = 10
    }
}

patron_boon_training_decision = { #5000
    picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

    desc = patron_boon_training_decision_desc
    # selection_tooltip = patron_boon_training_decision_tooltip
    selection_tooltip = patron_boon_training_decision_

    ai_check_interval = 3

    is_shown = {
        is_adult = yes
        is_ruler = yes
        OR = {
            AND = {
                #is_ai = no
                has_active_patron_selected = yes
            }
            # AND = {
            #     is_ai = yes
            #     patron_has_princes = yes
            # }
        }
    }

    cooldown = { days = 365 }

    is_valid_showing_failures_only = {
        NAND = {
            diplomacy >= 25
            martial >= 25
            stewardship >= 25
            intrigue >= 25
            learning >= 25
        }
        # custom_description = {
        #     text = insufficient_ardor
        #     value = massive_ardor_value
        #     var:ardor_display >= massive_ardor_value
        # }
        #patron_has_ardor = { ARDOR = massive_ardor_value }
    }

    effect = {
        #show_as_tooltip = { #The effect is actually applied in the event itself
        random_list = {
            25 = {
                #trigger = { NOT = { diplomacy = 20 } }
                modifier = { #should be zero at 25 skill level
                    add = { #subtract doesnt seem to work
                        value = -1
                        multiply = diplomacy
                    }
                    always = yes
                }
                add_diplomacy_skill = 1
            }
            25 = {
                #trigger = { NOT = { diplomacy = 20 } }
                modifier = {
                    add = {
                        value = -1
                        multiply = martial
                    }
                    always = yes
                }
                add_martial_skill = 1
            }
            25 = {
                #trigger = { NOT = { diplomacy = 20 } }
                modifier = {
                    add = {
                        value = -1
                        multiply = stewardship
                    }
                    always = yes
                }
                add_stewardship_skill = 1
            }
            25 = {
                #trigger = { NOT = { diplomacy = 20 } }
                modifier = {
                    add = {
                        value = -1
                        multiply = intrigue
                    }
                    always = yes
                }
                add_intrigue_skill = 1
            }
            25 = {
                #trigger = { NOT = { diplomacy = 20 } }
                modifier = {
                    add = {
                        value = -1
                        multiply = learning
                    }
                    always = yes
                }
                add_learning_skill = 1
            }
        }
        #}
        #patron_gain_favor_effect = yes
        # custom_description = {
        #     text = patron_ardor_change
        #     value = neg_massive_ardor_value #doesnt auto detect value
        #     change_variable = { name = ardor_display subtract = massive_ardor_value }
        # }
        # patron_ardor_update_actual = yes
        patron_ardor_change = { ARDOR = neg_massive_ardor_value }
    }

    ai_potential = { #should be able to eventually may handle seperatly
        always = yes
    }

    ai_will_do = {
        base = 5
    }
}

patron_boon_horde_decision = { #5000
    picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

    desc = patron_boon_horde_decision_desc
    # selection_tooltip = patron_boon_horde_decision_tooltip
    selection_tooltip = patron_boon_horde_decision_

    ai_check_interval = 3

    is_shown = {
        is_adult = yes
        is_ruler = yes
        OR = {
            AND = {
                #is_ai = no
                has_active_patron_selected = yes
            }
            # AND = {
            #     is_ai = yes
            #     patron_has_princes = yes
            # }
        }
    }

    cooldown = { days = 365 }

    is_valid_showing_failures_only = {
        # NOT = { #hard cap on number that can be summoned - 3 + 1 per 7 learning? scope to and store in list variable
        #     num hordes >= cap
        # }
        # custom_description = {
        #     text = insufficient_ardor
        #     value = massive_ardor_value
        #     var:ardor_display >= massive_ardor_value
        # } #may add scaling cost for more hordes as soft limit cost * list_size/10
        #patron_has_ardor = { ARDOR = massive_ardor_value }
    }

    effect = {
        #show_as_tooltip = { #The effect is actually applied in the event itself
        random_list = { #chance of failure or great success +30% larger
            25 = {
                #trigger = { NOT = { diplomacy = 20 } }
                # modifier = { #should be zero at 25 skill level
                #     add = { #subtract doesnt seem to work
                #         value = -1
                #         multiply = diplomacy
                #     }
                #     always = yes
                # }
                spawn_army = {
                    #levies =  #needed to bulk up army?
                    levies = {
                        value = 1
                    }
                    men_at_arms = { # optional, multiple can be specified. Need either levies or MAA
                        type = daedra
                        stacks = {
                            value = 1
                            # scope:attacker.faith.great_holy_war = {
                            #     every_pledged_attacker = {
                            #         add = 0.2
                            #     }
                            # }
                        }
                    }
                    location = capital_province
                    inheritable = no
                    uses_supply = no #may be op, needs testing
                    #army = army # optional. If set, the stack will merge into this army
                    #save_scope_as/save_temporary_scope_as = new_army # optional way to get a reference to the new army. Note this might not be set if the army wasn't spawned (e.g. if the character is not at war)
                    #name = dremora # gives the troops a specific name that shows up in interfaces
                }
            }
            # 25 = { #failure
            #     #trigger = { NOT = { diplomacy = 20 } }
            #     modifier = {
            #         add = {
            #             value = -1
            #             multiply = martial
            #         }
            #         always = yes
            #     }
            #     add_martial_skill = 1
            # }
            # 25 = { #great success +30% size
            #     #trigger = { NOT = { diplomacy = 20 } }
            #     modifier = {
            #         add = {
            #             value = -1
            #             multiply = stewardship
            #         }
            #         always = yes
            #     }
            #     add_stewardship_skill = 1
            # }
        }
        #}
        #patron_gain_favor_effect = yes
        # custom_description = {
        #     text = patron_ardor_change
        #     value = neg_massive_ardor_value #doesnt auto detect value
        #     change_variable = { name = ardor_display subtract = massive_ardor_value }
        # }
        # patron_ardor_update_actual = yes
        patron_ardor_change = { ARDOR = neg_massive_ardor_value }
    }

    ai_potential = { #should be able to eventually may handle seperatly
        always = no
    }

    ai_will_do = {
        base = 0
    }
}

# Shared Major Boons #

# invasion

patron_boon_invasion_decision = { #25000
    picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

    desc = patron_boon_invasion_decision_desc
    # selection_tooltip = patron_boon_invasion_decision_tooltip
    selection_tooltip = patron_boon_invasion_decision_

    ai_check_interval = 3

    is_shown = {
        is_adult = yes
        is_ruler = yes
        OR = {
            AND = {
                #is_ai = no
                has_active_patron_selected = yes
            }
            # AND = {
            #     is_ai = yes
            #     patron_has_princes = yes
            # }
        }
    }

    cooldown = { days = 365 }

    is_valid_showing_failures_only = {
        #has_cult_religion = yes #really dedicated only
        # custom_description = {
        #     text = insufficient_ardor
        #     value = monumental_ardor_value
        #     var:ardor_display >= monumental_ardor_value
        # }
        #patron_has_ardor = { ARDOR = monumental_ardor_value }
    }

    effect = {
        #show_as_tooltip = { #The effect is actually applied in the event itself
        #add_gold = 50
        #}
        #patron_gain_favor_effect = yes
        # custom_description = {
        #     text = patron_ardor_change
        #     value = neg_monumental_ardor_value #doesnt auto detect value
        #     change_variable = { name = ardor_display subtract = monumental_ardor_value }
        # }
        # patron_ardor_update_actual = yes
        patron_ardor_change = { ARDOR = neg_monumental_ardor_value }
    }

    ai_potential = { #should be able to eventually may handle seperatly
        always = no
    }

    ai_will_do = {
        base = 0
    }
}

debug_mode_toggle_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_dynasty_house.dds"

    is_shown = { always = yes }
    is_valid = { always = no }

    effect = {
        custom_tooltip = "Use button to toggle debug mode"
    }

    widget = {
        gui = "decision_view_widget_toggle_debug"
    }
}

# test_add_aptitude = {
#     picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

#     desc = test
#     selection_tooltip = test

#     ai_check_interval = 3

#     is_shown = {
#         always = yes
#     }

#     cooldown = { days = 0 }

#     is_valid_showing_failures_only = {
#         has_aptitude_less_than = { VALUE = 15 }
#     }

#     effect = {
#         add_aptitude_skill = { VALUE = 1 }
#         # set_global_variable = { name = bloodline_test_1_founder value = ROOT }
#         # set_global_variable = { name = bloodline_test_2_founder value = ROOT }
#         # set_global_variable = { name = bloodline_test_3_founder value = ROOT }
#         custom_tooltip = test_key
#     }

#     ai_potential = { #should be able to eventually may handle seperatly
#         always = no
#     }

#     ai_will_do = {
#         base = 0
#     }
# }

# test_subtract_aptitude = {
#     picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

#     desc = test
#     selection_tooltip = test

#     ai_check_interval = 3

#     is_shown = {
#         always = yes
#     }

#     cooldown = { days = 0 }

#     is_valid_showing_failures_only = {
#         always = yes
#     }

#     effect = {
#         add_aptitude_skill = { VALUE = -1 }
#     }

#     ai_potential = { #should be able to eventually may handle seperatly
#         always = no
#     }

#     ai_will_do = {
#         base = 0
#     }
# }

##########
# Unique #
##########

# Unique Offerings #

#undead sacrifice meridia
#gain disease peryite

# Unique Boons #

#disease resistance peryite
#vamp molag- harkon sacrificed 1000 people

# Unique Major Boons #

# Artifact Claims #


#for favor gain/loss
# show_as_tooltip = {
# 	committed_suicide_effect = yes
# }

# custom_tooltip = commit_suicide_decision_effect_tooltip
# trigger_event = {
# 	on_action = commit_suicide
# }