# Effect run when attempting to become an Occultist as a Witch
witch_become_occultist_effect = {
	remove_trait = witch
	add_trait = occultist
	
	add_piety_level = 1
}

startup_culture_effect = {
	save_culture_in_global_list = { CULTURE = culture:$CULTURE$ }
	culture_key_setup = { CULTURE = $CULTURE$ }
}

culture_key_setup = {
    culture:$CULTURE$ = {
        set_variable = { name = culture_key value = flag:$CULTURE$_ }
    }
}

### Destroy the Empire of Cyrodiil and create the k_heartlands
interregnum_shatter_cyrodiil = {
	### We create the vassal in the Imperial Isles (Imperial Commune)
	create_character = {
		location = title:c_imperial_city.title_province
		template = new_commander_character ### EK TODO: Not that (lol)
		faith = faith:imperial_cult
		culture = culture:heartlander
		save_scope_as = title_recipient
		gender_female_chance = {
			if = {
				limit = { scope:the_faith = { has_doctrine = doctrine_gender_male_dominated } }
				add = 0
			}
			else_if = {
				limit = { scope:the_faith = { has_doctrine = doctrine_gender_female_dominated } }
				add = 100
			}
			else = {
				add = 50
			}
		}
	}
	scope:title_recipient = { ek_character_setup_effect = yes }
	
	# We give them everything we own in k_heartlands (they usurp c_imperial_city if needed)
	title:k_heartlands = { add_to_list = titles_to_give }
	title:d_imperial_isle = { add_to_list = titles_to_give }
	title:c_imperial_city.title_province = { add_to_list = titles_to_give }
	every_held_title = {
		limit = { target_is_de_jure_liege_or_above = title:k_heartlands }
		add_to_list = titles_to_give
	}
	
	every_vassal = {
		limit = { capital_province = { kingdom = title:k_heartlands } }
		add_to_list = vassals_to_give
	}
	
	create_title_and_vassal_change = {
		type = independency
		save_scope_as = change
		add_claim_on_loss = no
	}
	
	every_in_list = {
		list = titles_to_give
		change_title_holder = {
			holder = scope:title_recipient
			change = scope:change
			take_baronies = yes
		}
	}
	
	every_in_list = {
		list = vassals_to_give
		change_liege = {
			liege = scope:title_recipient
			change = scope:change
		}
	}
	
	resolve_title_and_vassal_change = scope:change
	
	# Then they become independent
	create_title_and_vassal_change = {
		type = independency
		save_scope_as = change
		add_claim_on_loss = yes
	}
	scope:title_recipient = {
		becomes_independent = {
			change = scope:change
		}
	}

	resolve_title_and_vassal_change = scope:change
	
	
	## Now we destroy some stuff
	destroy_title = title:e_cyrodiil
	
	primary_title = { save_scope_as = primary_title }
	
	### Vassals become independent
	every_vassal = {
		limit = { NOT = { this.primary_title = { target_is_de_jure_liege_or_above = scope:primary_title } } }
		create_title_and_vassal_change = {
			type = independency
			save_scope_as = change
			add_claim_on_loss = yes
		}
		becomes_independent = {
			change = scope:change
		}

		resolve_title_and_vassal_change = scope:change
	}
	
	### Any county that isn't de Jure under our primary title becomes independent
	every_held_title = {
		limit = {
			NOT = { this = scope:primary_title }
			NOT = { target_is_de_jure_liege_or_above = scope:primary_title }
		}
		add_to_list = titles_to_make_independent
	}
	
	every_in_list = {
		list = titles_to_make_independent
		save_scope_as = current_title
		
		create_character = {
			location = scope:current_title.location
			template = new_commander_character ### EK TODO: Not that (lol)
			faith = scope:current_title.faith
			culture = scope:current_title.culture
			save_scope_as = title_recipient
			gender_female_chance = {
				if = {
					limit = { scope:the_faith = { has_doctrine = doctrine_gender_male_dominated } }
					add = 0
				}
				else_if = {
					limit = { scope:the_faith = { has_doctrine = doctrine_gender_female_dominated } }
					add = 100
				}
				else = {
					add = 50
				}
			}
		}
		scope:title_recipient = { ek_character_setup_effect = yes }
		
		# We give them the title
		create_title_and_vassal_change = {
			type = independency
			save_scope_as = change
			add_claim_on_loss = no
		}

		change_title_holder = {
			holder = scope:title_recipient
			change = scope:change
			take_baronies = yes
		}
		
		# And we make them independent
		scope:title_recipient = {
			becomes_independent = {
				change = scope:change
			}
		}
		
		resolve_title_and_vassal_change = scope:change
	}
	
	custom_tooltip = imperial_commune_creation_tooltip
	custom_tooltip = rest_cyrodiil_indepndent_tooltip
	custom_tooltip = interregnum_starts_tooltip
}

### To easily apply the effects of the Plunderer perks
calculate_bonus_resources_from_loot = {
	### EK EDIT: Grand Raider - Loot * 1.25
	if = {
		limit = { $RAIDER$ = { has_perk = grand_raider_perk } }
		
		change_variable = {
			name = raid_loot
			multiply = 1.25
		}
	}
	
	### EK EDIT: Loot & Prisoners - Loot / 5
	set_variable = {
		name = bonus_dev
		value = {
			value = var:raid_loot
			divide = 5
		}
	}
	
	### EK EDIT: Raider blood - Loot / 10
	set_variable = {
		name = bonus_renown
		value = {
			value = var:raid_loot
			divide = 10
		}
	}
}

### ! Requires you to use calculate_bonus_resources_from_loot at some point before
get_resources_from_loot = {
	### EK EDIT: Grand Raider - Loot * 1.25
	if = {
		limit = { $RAIDER$ = { has_perk = grand_raider_perk } }
		
		change_variable = {
			name = $LOOT$
			multiply = 1.25
		}
	}
	
	### EK EDIT: Loot & Prisoners - Loot / 5
	set_variable = {
		name = bonus_dev
		value = {
			value = $LOOT$
			divide = 5
		}
	}
	
	### EK EDIT: Raider blood - Loot / 10
	set_variable = {
		name = bonus_renown
		value = {
			value = $LOOT$
			divide = 10
		}
	}
	
	hidden_effect = { add_prestige = $LOOT$ }

	### EK EDIT: Gold is added differently, so we add the smol bonus here directly
	set_variable = {
		name = bonus_resources_gained
		value = {
			value = $LOOT$
			divide = 4
		}
	}
	hidden_effect = { add_gold = var:bonus_resources_gained }
	### EK EDIT: Sacred Raids - Give piety too
	if = { 
		limit = { has_perk = sacred_raids_perk }
		hidden_effect = { add_piety = $LOOT$ }
	}
	### EK EDIT: Raider Blood - Give renown too
	if = {
		limit = { has_perk = raider_blood_perk exists = $RAIDER$.dynasty }
		hidden_effect = { $RAIDER$.dynasty = { add_dynasty_prestige = $RAIDER$.var:bonus_renown } }
	}
}

### Spends the development progress stored in the variable in your counties, giving it in priority to the counties closer to growing
spend_dev_progress_own_counties = {
	set_variable = {
		name = loc_dev_points
		value = $DEV_POINTS$
	}
	
	while = {
		limit = { $DEV_POINTS$ > 0 }
		
		save_scope_value_as = {
			name = dev_points_left
			value = var:loc_dev_points
		}
		
		ordered_county = {
			limit = { this.holder = $OWNER$ }
			order_by = development_towards_level_increase
			
			save_scope_as = checked_county
			
			### We check how much dev points would have to be given for the county to get an additional dev 
			set_variable = {
				name = dev_needed
				value = 100
			}
			
			change_variable = {
				name = dev_needed
				subtract = scope:checked_county.development_towards_level_increase
			}
			
			save_scope_value_as = {
				name = dev_needed
				value = var:dev_needed
			}
			
			### Can we give that, or will the county have the settle with less?
			if = {
				limit = { scope:dev_points_left = { compare_value >= scope:dev_needed } }
				save_scope_value_as = {
					name = dev_given
					value = scope:dev_needed
				}
			}
			
			else = {
				save_scope_value_as = {
					name = dev_given
					value = scope:dev_points_left
				}
			}
			
			### Now that we know how much dev the county will get, give it
			change_development_progress = scope:dev_given
		}
		
		### And since we used some development, we subtract that value from the available dev points
		change_variable = {
			name = loc_dev_points
			subtract = scope:dev_given
		}
		clear_saved_scope = scope:dev_points_left
		clear_saved_scope = scope:dev_needed
	}
}

### Wound two times in a row
increase_wounds_two_times_no_death_effect = {
	save_temporary_scope_value_as = {
		name = treatment_type
		value = flag:$REASON$
	}

	change_trait_rank = {
		trait = wounded
		rank = 2
		max = 3
	}

	if = { #Wounds from treatments give no infection and no additional treatment
		limit = { NOT = { scope:treatment_type = flag:treatment } }

		#CHANCE OF INFECTION
		hidden_effect = {
			random = {
				chance = 10
				trigger_event = {
					id = health.0201
					days = { 30 60 }
				}
			}
		}

		#HANDLE TREATMENT
		if = { #To send notification message or trigger the right event
			limit = {
				has_trait_rank = {
					trait = wounded
					rank = 1
				}
				court_physician_available_trigger = yes
			}
			save_scope_as = sick_character
			safe_wound_treatment_effect = yes #Wounded 1 only gives a "result of treatment" notification" if you have a physician, i.e. you get no events about it.
		}
		else_if = {
			limit = {
				has_trait_rank = {
					trait = wounded
					rank = 2
				}
				has_recent_wound_treatment_trigger = no
			}
			#A "real" event if you're not receiving treatment
			#Nothing happens if you're already being treated for wounds
			trigger_event = {
				id = health.0102
				days = { 2 3 }
			}
		}
		else_if = {
			limit = {
				has_trait_rank = {
					trait = wounded
					rank = 3
				}
				has_recent_wound_treatment_trigger = no
			}
			#A "real" event if you're not receiving treatment
			#Nothing happens if you're already being treated for wounds
			trigger_event = {
				id = health.0104
				days = { 2 3 }
			}

			#Epilepsy risk
			epilepsy_brain_trauma_risk_effect = { CHANCE = 5 }
		}
	}
	flag:$REASON$ = {} #to stop the game from complaining about unused character flags
}

#increase_wounds_two_times_effect
increase_wounds_two_times_effect = {
	if = {
		limit = {
			has_trait_rank = {
				trait = wounded
				rank < 2
			}
		}
		increase_wounds_two_times_no_death_effect = { REASON = $REASON$ }
	}
	else_if = { #Using an if because this needs to never go wrong
		limit = {
			has_trait_rank = {
				trait = wounded
				rank >= 2
			}
		}
		death = {
			death_reason = death_$REASON$
		}
	}
}

#generate a three part name for summoned dragons
get_dragon_name = {
    save_scope_value_as = { name = max_length value = { integer_range = { min = 13 max = 16 } } } #13-16 feels good. longest named dragon is 14, location is 15

    # save length scopes for maths, need them to exist
    save_scope_value_as = { name = part_1_length value = 0 }
    save_scope_value_as = { name = part_2_length value = 0 }
    save_scope_value_as = { name = part_3_length value = 0 }

    # get part sizes and numbers
    get_dragon_name_part_size = { X = 1 }
    get_dragon_name_part_size = { X = 2 }
    get_dragon_name_part_size = { X = 3 }

    # if any are the same, get another
    # also some filtering
    while = { #part 1. 'the'/'of' dont tend to fit at the start
        limit = {
            OR = {
                AND = { #The
                    scope:part_1_length = 3
                    scope:part_1 = 5
                }
                AND = { #Of
                    scope:part_1_length = 2
                    scope:part_1 = 11
                }
            }
        }
        save_scope_value_as = { name = part_1_length value = 0 }
        get_dragon_name_part_size = { X = 1 }
    }
    while = { #part 2. cant be same as part 1
        limit = {
            scope:part_2_length = { compare_value = scope:part_1_length }
            scope:part_2 = { compare_value = scope:part_1 }
        }
        save_scope_value_as = { name = part_2_length value = 0 }
        get_dragon_name_part_size = { X = 2 }
    }
    while = { #part 3. 'the'/'of' dont tend to fit at the end, cant be same as part 1 or 2
        limit = {
            OR = {
                AND = {
                    scope:part_3_length = { compare_value = scope:part_1_length }
                    scope:part_3 = { compare_value = scope:part_1 }
                }
                AND = {
                    scope:part_3_length = { compare_value = scope:part_2_length }
                    scope:part_3 = { compare_value = scope:part_2 }
                }
                AND = { #The
                    scope:part_3_length = 3
                    scope:part_3 = 5
                }
                AND = { #Of
                    scope:part_3_length = 2
                    scope:part_3 = 11
                }
            }
        }
        save_scope_value_as = { name = part_3_length value = 0 }
        get_dragon_name_part_size = { X = 3 }
    }

    # convert number to name flag with switch
    set_dragon_name_part = { X = 1 }
    set_dragon_name_part = { X = 2 }
    set_dragon_name_part = { X = 3 }
}
get_dragon_name_part_size = {
    save_scope_value_as = { #save current length
        name = current_length
        value = {
            value = scope:part_1_length
            add = scope:part_2_length
            add = scope:part_3_length
        }
    }

    random_list = {
        100 = {
            trigger = { #would any of the options go over the max length? add 2 as min part length
                save_temporary_scope_value_as = { name = trig_0 value = { value = scope:current_length add = 2 } }
                scope:max_length = { compare_value < scope:trig_0 }
            }
            save_scope_value_as = { name = part_$X$_length value = 0 }
            save_scope_value_as = { name = part_$X$ value = 0 }
        }
        14 = {
            trigger = { #would this option be below max length?
                save_temporary_scope_value_as = { name = trig_2 value = { value = scope:current_length add = 2 } }
                scope:max_length = { compare_value >= scope:trig_2 }
            }
            save_scope_value_as = { name = part_$X$_length value = 2 }
            save_scope_value_as = { name = part_$X$ value = { integer_range = { min = 1 max = 14 } } }
        }
        40 = {
            trigger = { #would this option be below max length?
                save_temporary_scope_value_as = { name = trig_3 value = { value = scope:current_length add = 3 } }
                scope:max_length = { compare_value >= scope:trig_3 }
            }
            save_scope_value_as = { name = part_$X$_length value = 3 }
            save_scope_value_as = { name = part_$X$ value = { integer_range = { min = 1 max = 40 } } }
        }
        41 = {
            trigger = { #would this option be below max length?
                save_temporary_scope_value_as = { name = trig_4 value = { value = scope:current_length add = 4 } }
                scope:max_length = { compare_value >= scope:trig_4 }
            }
            save_scope_value_as = { name = part_$X$_length value = 4 }
            save_scope_value_as = { name = part_$X$ value = { integer_range = { min = 1 max = 41 } } }
        }
        10 = {
            trigger = { #would this option be below max length?
                save_temporary_scope_value_as = { name = trig_5 value = { value = scope:current_length add = 5 } }
                scope:max_length = { compare_value >= scope:trig_5 }
            }
            save_scope_value_as = { name = part_$X$_length value = 5 }
            save_scope_value_as = { name = part_$X$ value = { integer_range = { min = 1 max = 10 } } }
        }
        6 = {
            trigger = { #would this option be below max length?
                save_temporary_scope_value_as = { name = trig_6 value = { value = scope:current_length add = 6 } }
                scope:max_length = { compare_value >= scope:trig_6 }
            }
            save_scope_value_as = { name = part_$X$_length value = 6 }
            save_scope_value_as = { name = part_$X$ value = { integer_range = { min = 1 max = 6 } } }
        }
        2 = {
            trigger = { #would this option be below max length?
                save_temporary_scope_value_as = { name = trig_7 value = { value = scope:current_length add = 7 } }
                scope:max_length = { compare_value >= scope:trig_7 }
            }
            save_scope_value_as = { name = part_$X$_length value = 7 }
            save_scope_value_as = { name = part_$X$ value = { integer_range = { min = 1 max = 2 } } }
        }
        1 = {
            trigger = { #would this option be below max length?
                save_temporary_scope_value_as = { name = trig_8 value = { value = scope:current_length add = 8 } }
                scope:max_length = { compare_value >= scope:trig_8 }
            }
            save_scope_value_as = { name = part_$X$_length value = 8 }
            save_scope_value_as = { name = part_$X$ value = { integer_range = { min = 1 max = 1 } } }
        }
    }
}
set_dragon_name_part = {
    switch = {
        trigger = scope:part_$X$_length

        0 = { set_variable = { name = name$X$ value = flag:dn_blank days = 1 } } #Blank

        2 = {
            switch = {
                trigger = scope:part_$X$
                1 = { set_variable = { name = name$X$ value = flag:dn_ag days = 1 } } #Burn
                2 = { set_variable = { name = name$X$ value = flag:dn_ah days = 1 } } #Hunter
                3 = { set_variable = { name = name$X$ value = flag:dn_al days = 1 } } #Destroyer
                4 = { set_variable = { name = name$X$ value = flag:dn_du days = 1 } } #Devour
                5 = { set_variable = { name = name$X$ value = flag:dn_fo days = 1 } } #Frost
                6 = { set_variable = { name = name$X$ value = flag:dn_in days = 1 } } #Master
                7 = { set_variable = { name = name$X$ value = flag:dn_lo days = 1 } } #Deceive
                8 = { set_variable = { name = name$X$ value = flag:dn_od days = 1 } } #Snow
                9 = { set_variable = { name = name$X$ value = flag:dn_on days = 1 } } #Spirit
                10 = { set_variable = { name = name$X$ value = flag:dn_qo days = 1 } } #Lightning
                11 = { set_variable = { name = name$X$ value = flag:dn_se days = 1 } } #Of
                12 = { set_variable = { name = name$X$ value = flag:dn_su days = 1 } } #Air
                13 = { set_variable = { name = name$X$ value = flag:dn_tu days = 1 } } #Hammer
                14 = { set_variable = { name = name$X$ value = flag:dn_ul days = 1 } } #Eternity
            }
        }

        3 = {
            switch = {
                trigger = scope:part_$X$
                1 = { set_variable = { name = name$X$ value = flag:dn_bah days = 1 } } #Wrath
                2 = { set_variable = { name = name$X$ value = flag:dn_dun days = 1 } } #Grace
                3 = { set_variable = { name = name$X$ value = flag:dn_dur days = 1 } } #Curse
                4 = { set_variable = { name = name$X$ value = flag:dn_fel days = 1 } } #Feral
                5 = { set_variable = { name = name$X$ value = flag:dn_fin days = 1 } } #The
                6 = { set_variable = { name = name$X$ value = flag:dn_fus days = 1 } } #Force
                7 = { set_variable = { name = name$X$ value = flag:dn_hah days = 1 } } #Mind
                8 = { set_variable = { name = name$X$ value = flag:dn_iiz days = 1 } } #Ice
                9 = { set_variable = { name = name$X$ value = flag:dn_jot days = 1 } } #Maw
                10 = { set_variable = { name = name$X$ value = flag:dn_kah days = 1 } } #Pride
                11 = { set_variable = { name = name$X$ value = flag:dn_kro days = 1 } } #Sorcerer
                12 = { set_variable = { name = name$X$ value = flag:dn_kun days = 1 } } #Moonlight
                13 = { set_variable = { name = name$X$ value = flag:dn_lok days = 1 } } #Rise
                14 = { set_variable = { name = name$X$ value = flag:dn_lot days = 1 } } # Great
                15 = { set_variable = { name = name$X$ value = flag:dn_luv days = 1 } } #Tear
                16 = { set_variable = { name = name$X$ value = flag:dn_mah days = 1 } } #Fall/Fell
                17 = { set_variable = { name = name$X$ value = flag:dn_mir days = 1 } } #Allegiance
                18 = { set_variable = { name = name$X$ value = flag:dn_mul days = 1 } } #Strong
                19 = { set_variable = { name = name$X$ value = flag:dn_nah days = 1 } } #Fury
                20 = { set_variable = { name = name$X$ value = flag:dn_nax days = 1 } } #Cruelty
                21 = { set_variable = { name = name$X$ value = flag:dn_neh days = 1 } } #Never
                22 = { set_variable = { name = name$X$ value = flag:dn_nin days = 1 } } #Sting
                23 = { set_variable = { name = name$X$ value = flag:dn_nir days = 1 } } #Hunt
                24 = { set_variable = { name = name$X$ value = flag:dn_nos days = 1 } } #Strike
                25 = { set_variable = { name = name$X$ value = flag:dn_qah days = 1 } } #Armor
                26 = { set_variable = { name = name$X$ value = flag:dn_rel days = 1 } } #Domination
                27 = { set_variable = { name = name$X$ value = flag:dn_rot days = 1 } } #Word
                28 = { set_variable = { name = name$X$ value = flag:dn_sah days = 1 } } #Phantom
                29 = { set_variable = { name = name$X$ value = flag:dn_sot days = 1 } } #White
                30 = { set_variable = { name = name$X$ value = flag:dn_sov days = 1 } } #Shock
                31 = { set_variable = { name = name$X$ value = flag:dn_sul days = 1 } } #Day
                32 = { set_variable = { name = name$X$ value = flag:dn_vah days = 1 } } #Spring
                33 = { set_variable = { name = name$X$ value = flag:dn_ved days = 1 } } #Black
                34 = { set_variable = { name = name$X$ value = flag:dn_vey days = 1 } } #Cut
                35 = { set_variable = { name = name$X$ value = flag:dn_vol days = 1 } } #Horror
                36 = { set_variable = { name = name$X$ value = flag:dn_vul days = 1 } } #Dark
                37 = { set_variable = { name = name$X$ value = flag:dn_vur days = 1 } } #Valor
                38 = { set_variable = { name = name$X$ value = flag:dn_yol days = 1 } } #Fire
                39 = { set_variable = { name = name$X$ value = flag:dn_zii days = 1 } } #Spirit
                40 = { set_variable = { name = name$X$ value = flag:dn_zin days = 1 } } #Honor
            }
        }

        4 = {
            switch = {
                trigger = scope:part_$X$
                1 = { set_variable = { name = name$X$ value = flag:dn_brii days = 1 } } #Beauty
                2 = { set_variable = { name = name$X$ value = flag:dn_brit days = 1 } } #Beautiful
                3 = { set_variable = { name = name$X$ value = flag:dn_daan days = 1 } } #Doom
                4 = { set_variable = { name = name$X$ value = flag:dn_drog days = 1 } } #Lord
                5 = { set_variable = { name = name$X$ value = flag:dn_duul days = 1 } } #Crown
                6 = { set_variable = { name = name$X$ value = flag:dn_feyn days = 1 } } #Bane
                7 = { set_variable = { name = name$X$ value = flag:dn_fiik days = 1 } } #Mirror
                8 = { set_variable = { name = name$X$ value = flag:dn_frin days = 1 } } #Hot
                9 = { set_variable = { name = name$X$ value = flag:dn_gaaf days = 1 } } #Ghost
                10 = { set_variable = { name = name$X$ value = flag:dn_gaar days = 1 } } #Unleash/Release
                11 = { set_variable = { name = name$X$ value = flag:dn_golz days = 1 } } #Stone
                12 = { set_variable = { name = name$X$ value = flag:dn_grah days = 1 } } #Battle
                13 = { set_variable = { name = name$X$ value = flag:dn_gron days = 1 } } #Bind
                14 = { set_variable = { name = name$X$ value = flag:dn_heyv days = 1 } } #Duty
                15 = { set_variable = { name = name$X$ value = flag:dn_jiid days = 1 } } #Moon
                16 = { set_variable = { name = name$X$ value = flag:dn_kaal days = 1 } } #Champion
                17 = { set_variable = { name = name$X$ value = flag:dn_kein days = 1 } } #War
                18 = { set_variable = { name = name$X$ value = flag:dn_kest days = 1 } } #Tempest
                19 = { set_variable = { name = name$X$ value = flag:dn_kren days = 1 } } #Break
                20 = { set_variable = { name = name$X$ value = flag:dn_krif days = 1 } } #Fight
                21 = { set_variable = { name = name$X$ value = flag:dn_krii days = 1 } } #Kill
                22 = { set_variable = { name = name$X$ value = flag:dn_kril days = 1 } } #Brave
                23 = { set_variable = { name = name$X$ value = flag:dn_krin days = 1 } } #Courageous
                24 = { set_variable = { name = name$X$ value = flag:dn_laas days = 1 } } #Life
                25 = { set_variable = { name = name$X$ value = flag:dn_liiv days = 1 } } #Wither
                26 = { set_variable = { name = name$X$ value = flag:dn_maar days = 1 } } #Terror
                27 = { set_variable = { name = name$X$ value = flag:dn_moro days = 1 } } #Glory
                28 = { set_variable = { name = name$X$ value = flag:dn_naak days = 1 } } #Eat
                29 = { set_variable = { name = name$X$ value = flag:dn_odus days = 1 } } #Snowy
                30 = { set_variable = { name = name$X$ value = flag:dn_onik days = 1 } } #Wise
                31 = { set_variable = { name = name$X$ value = flag:dn_paar days = 1 } } #Ambition
                32 = { set_variable = { name = name$X$ value = flag:dn_paaz days = 1 } } #Fair
                33 = { set_variable = { name = name$X$ value = flag:dn_qeth days = 1 } } #Bone
                34 = { set_variable = { name = name$X$ value = flag:dn_ruth days = 1 } } #Rage
                35 = { set_variable = { name = name$X$ value = flag:dn_thur days = 1 } } #Overlord
                36 = { set_variable = { name = name$X$ value = flag:dn_tiid days = 1 } } #Time
                37 = { set_variable = { name = name$X$ value = flag:dn_vaaz days = 1 } } #Tear
                38 = { set_variable = { name = name$X$ value = flag:dn_viin days = 1 } } #Shine
                39 = { set_variable = { name = name$X$ value = flag:dn_viir days = 1 } } #Dying
                40 = { set_variable = { name = name$X$ value = flag:dn_zind days = 1 } } #Triumph
                41 = { set_variable = { name = name$X$ value = flag:dn_zoor days = 1 } } #Legend
            }
        }

        5 = {
            switch = {
                trigger = scope:part_$X$
                1 = { set_variable = { name = name$X$ value = flag:dn_ahzid days = 1 } } #Bitter
                2 = { set_variable = { name = name$X$ value = flag:dn_hevno days = 1 } } #Brutal
                3 = { set_variable = { name = name$X$ value = flag:dn_kriid days = 1 } } #Slayer
                4 = { set_variable = { name = name$X$ value = flag:dn_munax days = 1 } } #Cruel
                5 = { set_variable = { name = name$X$ value = flag:dn_okaaz days = 1 } } #Sea
                6 = { set_variable = { name = name$X$ value = flag:dn_revak days = 1 } } #Sacred
                7 = { set_variable = { name = name$X$ value = flag:dn_strun days = 1 } } #Storm
                8 = { set_variable = { name = name$X$ value = flag:dn_viing days = 1 } } #Wing
                9 = { set_variable = { name = name$X$ value = flag:dn_vokun days = 1 } } #Shadow
                10 = { set_variable = { name = name$X$ value = flag:dn_yuvon days = 1 } } #Gold/Golden
            }
        }

        6 = {
            switch = {
                trigger = scope:part_$X$
                1 = { set_variable = { name = name$X$ value = flag:dn_boziik days = 1 } } #Bold(ly)
                2 = { set_variable = { name = name$X$ value = flag:dn_kinzon days = 1 } } #Sharp
                3 = { set_variable = { name = name$X$ value = flag:dn_nonvul days = 1 } } #Noble
                4 = { set_variable = { name = name$X$ value = flag:dn_rovaan days = 1 } } #Wander
                5 = { set_variable = { name = name$X$ value = flag:dn_sahrot days = 1 } } #Mighty
                6 = { set_variable = { name = name$X$ value = flag:dn_vahlok days = 1 } } #Guardian
            }
        }

        7 = {
            switch = {
                trigger = scope:part_$X$
                1 = { set_variable = { name = name$X$ value = flag:dn_bahlaan days = 1 } } #Worthy
                2 = { set_variable = { name = name$X$ value = flag:dn_kruziik days = 1 } } #Ancient
            }
        }

        8 = {
            switch = {
                trigger = scope:part_$X$
                1 = { set_variable = { name = name$X$ value = flag:dn_nahkriin days = 1 } } #Vengeance
            }
        }
    }
}

### Daedric whispers - Give the right combo of trait and daedra
# Flag
set_combo_trait_daedra_flag = {
	add_character_flag = stress_$TRAIT$_$DAEDRA$
}