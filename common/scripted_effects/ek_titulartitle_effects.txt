form_kingdom_get_two_random_cities = {
	random_realm_county = {
		limit = {
			target_is_de_jure_liege_or_above = scope:old_kingdom_1
			any_in_de_facto_hierarchy = { 			#
				exists = title_province				# With at least one Barony...
				title_province = {					#
					has_holding_type = city_holding # ...which is a City
				}
			}
		}
		alternative_limit = {
			target_is_de_jure_liege_or_above = scope:old_kingdom_1
		}
		random_in_de_facto_hierarchy = {
			limit = {
				exists = title_province
				title_province = { has_holding_type = city_holding }
			}
			alternative_limit = {
				exists = title_province
			}
			save_scope_as = city_1
		}
	}
	random_realm_county = {
		limit = {
			target_is_de_jure_liege_or_above = scope:old_kingdom_2
			any_in_de_facto_hierarchy = { 			#
				exists = title_province				# With at least one Barony...
				title_province = {					#
					has_holding_type = city_holding # ...which is a City
				}
			}
		}
		alternative_limit = {
			target_is_de_jure_liege_or_above = scope:old_kingdom_2
		}
		random_in_de_facto_hierarchy = {
			limit = {
				exists = title_province
				title_province = { has_holding_type = city_holding }
			}
			alternative_limit = {
				exists = title_province
			}
			save_scope_as = city_2
		}
	}
}

form_kingdom_scripted_effect = {
	### Localisation
	form_kingdom_get_two_random_cities = yes
	
	### Which Empire (if it could be contested) would receive the kingdom
	capital_province = { empire = { save_scope_as = de_jure_liege_to_keep } }
	
	### Give the kingdom
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	### Copy title history if one of the two old k_ is our primary title
	if = {
		limit = { has_primary_title = scope:old_kingdom_1 }
		scope:new_kingdom = { copy_title_history = scope:old_kingdom_1 }
	}
	else_if = {
		limit = { has_primary_title = scope:old_kingdom_2 }
		scope:new_kingdom = { copy_title_history = scope:old_kingdom_2 }
	}
	scope:new_kingdom = {
		change_title_holder = {
			holder = root
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change
	set_primary_title_to = scope:new_kingdom
	
	hidden_effect = {
		### Drift all the duchies under the old kingdoms into the new one
		every_in_list = {
			list = old_kingdom_list
			
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_duchy }
				set_de_jure_liege_title = scope:new_kingdom
			}
		}
		
		### And finally we make sure to destroy all the old kingdoms title
		# I do it by hand for now because parsing the list doesn't seem to work :|
		destroy_title = scope:old_kingdom_1
		destroy_title = scope:old_kingdom_2
		
		### Make sure to set the correct de Jure liege
		# Vassal : Take the liege primary title
		# Indep : Take the "theoric" empire
		if = {
			limit = { is_independent_ruler = no }
			scope:new_kingdom = { set_de_jure_liege_title = root.liege.primary_title }
		}
		else = {
			scope:new_kingdom = { set_de_jure_liege_title = scope:de_jure_liege_to_keep }
		}
	}
	
	add_prestige = major_prestige_gain
}

## High Rock
form_craglorn_scripted_effect = {
	save_scope_as = scoped_ruler
	title:k_craglorn = { save_scope_as = new_kingdom }
	title:k_elinhir = { save_scope_as = old_kingdom_1 }
	title:k_dragonstar = { save_scope_as = old_kingdom_2 }
	
	scope:old_kingdom_1 = { add_to_list = old_kingdom_list }
	scope:old_kingdom_2 = { add_to_list = old_kingdom_list }
	
	custom_tooltip = form_craglorn_kingdom_decision_effects_de_jure_tt
	
	form_kingdom_scripted_effect = yes
}
form_glenumbra_scripted_effect = {
	save_scope_as = scoped_ruler
	title:k_glenumbra = { save_scope_as = new_kingdom }
	title:k_daggerfall = { save_scope_as = old_kingdom_1 }
	title:k_camlorn = { save_scope_as = old_kingdom_2 }
	
	scope:old_kingdom_1 = { add_to_list = old_kingdom_list }
	scope:old_kingdom_2 = { add_to_list = old_kingdom_list }
	
	custom_tooltip = form_glenumbra_kingdom_decision_effects_de_jure_tt
	custom_tooltip = form_glenumbra_kingdom_decision_integrate_balfiera_tt
	
	form_kingdom_scripted_effect = yes
	
	hidden_effect = {
		if = {
			limit = { completely_controls = title:d_balfiera }
			title:d_balfiera = { set_de_jure_liege_title = scope:new_kingdom }
		}
	}
}
form_rivenspire_scripted_effect = {
	save_scope_as = scoped_ruler
	title:k_rivenspire = { save_scope_as = new_kingdom }
	title:k_northpoint = { save_scope_as = old_kingdom_1 }
	title:k_shornhelm = { save_scope_as = old_kingdom_2 }
	
	scope:old_kingdom_1 = { add_to_list = old_kingdom_list }
	scope:old_kingdom_2 = { add_to_list = old_kingdom_list }
	
	custom_tooltip = form_rivenspire_kingdom_decision_effects_de_jure_tt
	
	form_kingdom_scripted_effect = yes
}
form_greater_wrothgar_scripted_effect = {
	save_scope_as = scoped_ruler
	title:k_greater_wrothgar = { save_scope_as = new_kingdom }
	title:k_wrothgar = { save_scope_as = old_kingdom_1 }
	title:k_fharun = { save_scope_as = old_kingdom_2 }
	
	scope:old_kingdom_1 = { add_to_list = old_kingdom_list }
	scope:old_kingdom_2 = { add_to_list = old_kingdom_list }
	
	custom_tooltip = form_greater_wrothgar_kingdom_decision_effects_de_jure_tt
	
	form_kingdom_scripted_effect = yes
}
form_bangkorai_scripted_effect = {
	save_scope_as = scoped_ruler
	title:k_bangkorai = { save_scope_as = new_kingdom }
	title:k_evermore = { save_scope_as = old_kingdom_1 }
	title:k_ojwambu = { save_scope_as = old_kingdom_2 }
	
	scope:old_kingdom_1 = { add_to_list = old_kingdom_list }
	scope:old_kingdom_2 = { add_to_list = old_kingdom_list }
	
	custom_tooltip = form_bangkorai_kingdom_decision_effects_de_jure_tt
	
	form_kingdom_scripted_effect = yes
}

## Skyrim
form_west_ghost_scripted_effect = {
	save_scope_as = scoped_ruler
	title:k_west_ghost = { save_scope_as = new_kingdom }
	title:k_solitude = { save_scope_as = old_kingdom_1 }
	title:k_morthal = { save_scope_as = old_kingdom_2 }
	
	scope:old_kingdom_1 = { add_to_list = old_kingdom_list }
	scope:old_kingdom_2 = { add_to_list = old_kingdom_list }
	
	custom_tooltip = form_west_ghost_kingdom_decision_effects_de_jure_tt
	
	form_kingdom_scripted_effect = yes
}
form_white_river_scripted_effect = {
	save_scope_as = scoped_ruler
	title:k_white_river = { save_scope_as = new_kingdom }
	title:k_whiterun = { save_scope_as = old_kingdom_1 }
	title:k_falkreath = { save_scope_as = old_kingdom_2 }
	
	scope:old_kingdom_1 = { add_to_list = old_kingdom_list }
	scope:old_kingdom_2 = { add_to_list = old_kingdom_list }
	
	custom_tooltip = form_white_river_kingdom_decision_effects_de_jure_tt
	
	form_kingdom_scripted_effect = yes
}
form_east_ghost_scripted_effect = {
	save_scope_as = scoped_ruler
	title:k_east_ghost = { save_scope_as = new_kingdom }
	title:k_winterhold = { save_scope_as = old_kingdom_1 }
	title:k_dawnstar = { save_scope_as = old_kingdom_2 }
	
	scope:old_kingdom_1 = { add_to_list = old_kingdom_list }
	scope:old_kingdom_2 = { add_to_list = old_kingdom_list }
	
	custom_tooltip = form_east_ghost_kingdom_decision_effects_de_jure_tt
	
	form_kingdom_scripted_effect = yes
}
form_dark_water_scripted_effect = {
	save_scope_as = scoped_ruler
	title:k_dark_water = { save_scope_as = new_kingdom }
	title:k_windhelm = { save_scope_as = old_kingdom_1 }
	title:k_riften = { save_scope_as = old_kingdom_2 }
	
	scope:old_kingdom_1 = { add_to_list = old_kingdom_list }
	scope:old_kingdom_2 = { add_to_list = old_kingdom_list }
	
	custom_tooltip = form_dark_water_kingdom_decision_effects_de_jure_tt
	
	form_kingdom_scripted_effect = yes
}

### Form Empires
form_reach_empire_scripted_effect = {
	save_scope_as = founder
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_reach = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	
	### We save the scopes for the loc
	title:e_reach = { save_scope_as = reach_empire }
	title:k_wrothgar = { save_scope_as = wrothgar }
	title:k_falkreath = { save_scope_as = falkreath }
	title:k_solitude = { save_scope_as = solitude }
	
	### De Jure changes
	custom_tooltip = form_reach_empire_effect_de_jure_tt
	hidden_effect = {
		title:k_markarth = { set_de_jure_liege_title = title:e_reach }
		## TODO: Handle region unification decisions
		title:k_dragonstar = { set_de_jure_liege_title = title:e_reach }
		title:k_elinhir = { set_de_jure_liege_title = title:e_reach }
		title:k_fharun = { set_de_jure_liege_title = title:e_reach }
		title:k_evermore = { set_de_jure_liege_title = title:e_reach }
		
		## If d_darkfall is held but not k_solitude, we integrate it
		if = {
			limit = { NOT = { title:k_solitude = { holder = root } } }
			title:d_darkfall = { set_de_jure_liege_title = title:k_markarth }
		}
		# title:d_darkfall = { set_de_jure_liege_title = title:k_markarth }
		## If d_argent is held but not k_wrothgar, we integrate it
		if = {
			limit = { NOT = { title:k_wrothgar = { holder = root } } }
			title:d_argent = { set_de_jure_liege_title = title:k_fharun }
		}
		## If k_wrothgar is held, we integrate it
		if = {
			limit = { title:k_wrothgar = { holder = root } }
			title:k_wrothgar = { set_de_jure_liege_title = title:e_reach }
		}
		## If k_falkreath is held, we integrate it
		if = {
			limit = { title:k_falkreath = { holder = root } }
			title:k_falkreath = { set_de_jure_liege_title = title:e_reach }
		}
		## If k_solitude is held, we integrate it
		if = {
			limit = { title:k_solitude = { holder = root } }
			title:k_solitude = { set_de_jure_liege_title = title:e_reach }
		}
	}
	
	custom_tooltip = form_reach_empire_effect_de_jure_tt_a
	custom_tooltip = form_reach_empire_effect_de_jure_tt_b
}