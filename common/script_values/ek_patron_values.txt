#Basic values
tiny_ardor_value = 5
minor_ardor_value = 25
medium_ardor_value = 100
major_ardor_value = 500
massive_ardor_value = 2000
monumental_ardor_value = 10000 #only used for invasions

#Calculated values
tiny_ardor_value_double = { value = tiny_ardor_value multiply = 2 }
minor_ardor_value_double = { value = minor_ardor_value multiply = 2 }
medium_ardor_value_double = { value = medium_ardor_value multiply = 2 }
major_ardor_value_double = { value = major_ardor_value multiply = 2 }
massive_ardor_value_double = { value = massive_ardor_value multiply = 2 }

#Negative values
neg_tiny_ardor_value = { value = 0 subtract = tiny_ardor_value }
neg_minor_ardor_value = { value = 0 subtract = minor_ardor_value }
neg_medium_ardor_value = { value = 0 subtract = medium_ardor_value }
neg_major_ardor_value = { value = 0 subtract = major_ardor_value }
neg_massive_ardor_value = { value = 0 subtract = massive_ardor_value }
neg_monumental_ardor_value = { value = 0 subtract = monumental_ardor_value } #only used for invasions

neg_tiny_ardor_value_double = { value = 0 subtract = tiny_ardor_value_double }
neg_minor_ardor_value_double = { value = 0 subtract = minor_ardor_value_double }
neg_medium_ardor_value_double = { value = 0 subtract = medium_ardor_value_double }
neg_major_ardor_value_double = { value = 0 subtract = major_ardor_value_double }
neg_massive_ardor_value_double = { value = 0 subtract = massive_ardor_value_double }

#gui levels
#have 5 pips with 0/0.5/1 states
# 0
# 0.5 - 10 5
# 1   - 25

# 1.5 - 50 25
# 2   - 100

# 2.5 - 200 100
# 3   - 500

# 3.5 - 1000 500
# 4   - 2000

# 4.5 - 4000 2000
# 5   - 10000

lunar_cycle_start = {
    add = { # year 365, moon cycle 96 (384).
        value = current_year
        subtract = 3360
        multiply = 365
    }
    #multiply = 360 # is this needed?
    #multiply = 12
    #multiply = 30
    add = current_day
    if = {
        limit = { current_month = 2 }
        add = 31
    }
    else_if = {
        limit = { current_month = 3 }
        add = 59
    }
    else_if = {
        limit = { current_month = 4 }
        add = 90
    }
    else_if = {
        limit = { current_month = 5 }
        add = 120
    }
    else_if = {
        limit = { current_month = 6 }
        add = 151
    }
    else_if = {
        limit = { current_month = 7 }
        add = 181
    }
    else_if = {
        limit = { current_month = 8 }
        add = 212
    }
    else_if = {
        limit = { current_month = 9 }
        add = 243
    }
    else_if = {
        limit = { current_month = 10 }
        add = 273
    }
    else_if = {
        limit = { current_month = 11 }
        add = 304
    }
    else_if = {
        limit = { current_month = 12 }
        add = 334
    }
}

# each sign should average ~28 days a year as 365/13 is ~28 -> serpent should average 28 days a year active
# serpent is semi-random in its activity -> use a formula with predicatable outcome, random input
# formula is (365/x)*a = 28 where a is num active days, x is cycle length x = a*(365/13) ~= a*13
# x is cycle length, need inactive time -> x = a*12 as 1/13 time spent active
# changed use cycle time now

serpent_active_days = {
    integer_range = { min = 3 max = 6 }
}

serpent_cycle_days = {
    value = serpent_active_days
    multiply = 13
}

ardor_bin_0 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 62.5
            floor = yes
        }
        modulo = 2
    }
}

ardor_bin_1 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 125
            floor = yes
        }
        modulo = 2
    }
}

ardor_bin_2 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 250
            floor = yes
        }
        modulo = 2
    }
}

ardor_bin_3 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 500
            floor = yes
        }
        modulo = 2
    }
}

ardor_bin_4 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 1000
            floor = yes
        }
        modulo = 2
    }
}

ardor_bin_5 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 2000
            floor = yes
        }
        modulo = 2
    }
}

ardor_bin_6 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 4000
            floor = yes
        }
        modulo = 2
    }
}

ardor_bin_7 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 8000
            floor = yes
        }
        modulo = 2
    }
}

# test if scoping to player ardor value then using EmptyScope.ScriptValue('ardor_prog_test') in progressbar works
# also test if it works as a stretch factor
# ardor_prog_test = {
#     value = player.var:ardor_display
# }

# ardor_binary = {
#     #conversion is 1px = 62.5
#     #capped at 15937.5 as it will rollover or just break
#     value = 0
#     add = {
#         add = {
#             add = {
#                 value = var:ardor_display
#                 divide = 62.5
#                 floor = yes
#             }
#             modulo = 2
#         }
#         multiply = 0.01
#     }
#     add = {
#         add = {
#             add = {
#                 value = var:ardor_display
#                 divide = 125
#                 floor = yes
#             }
#             modulo = 2
#         }
#         multiply = 0.1
#     }
#     add = {
#         add = {
#             add = {
#                 value = var:ardor_display
#                 divide = 250
#                 floor = yes
#             }
#             modulo = 2
#         }
#         multiply = 1
#     }
#     add = {
#         add = {
#             add = {
#                 value = var:ardor_display
#                 divide = 500
#                 floor = yes
#             }
#             modulo = 2
#         }
#         multiply = 10
#     }
#     add = {
#         add = {
#             add = {
#                 value = var:ardor_display
#                 divide = 1000
#                 floor = yes
#             }
#             modulo = 2
#         }
#         multiply = 100
#     }
#     add = {
#         add = {
#             add = {
#                 value = var:ardor_display
#                 divide = 2000
#                 floor = yes
#             }
#             modulo = 2
#         }
#         multiply = 1000
#     }
#     add = {
#         add = {
#             add = {
#                 value = var:ardor_display
#                 divide = 4000
#                 floor = yes
#             }
#             modulo = 2
#         }
#         multiply = 10000
#     }
#     add = {
#         add = {
#             add = {
#                 value = var:ardor_display
#                 divide = 8000
#                 floor = yes
#             }
#             modulo = 2
#         }
#         multiply = 100000
#     }
# }