#Basic values
tiny_ardor_value = 5
minor_ardor_value = 25
medium_ardor_value = 100
major_ardor_value = 500
massive_ardor_value = 2000
monumental_ardor_value = 10000 #only used for invasions

#Calculated values
tiny_ardor_value_double = { value = tiny_ardor_value multiply = 2 }
minor_ardor_value_double = { value = minor_ardor_value multiply = 2 }
medium_ardor_value_double = { value = medium_ardor_value multiply = 2 }
major_ardor_value_double = { value = major_ardor_value multiply = 2 }
massive_ardor_value_double = { value = massive_ardor_value multiply = 2 }

#Negative values
neg_tiny_ardor_value = { value = 0 subtract = tiny_ardor_value }
neg_minor_ardor_value = { value = 0 subtract = minor_ardor_value }
neg_medium_ardor_value = { value = 0 subtract = medium_ardor_value }
neg_major_ardor_value = { value = 0 subtract = major_ardor_value }
neg_massive_ardor_value = { value = 0 subtract = massive_ardor_value }
neg_monumental_ardor_value = { value = 0 subtract = monumental_ardor_value } #only used for invasions

neg_tiny_ardor_value_double = { value = 0 subtract = tiny_ardor_value_double }
neg_minor_ardor_value_double = { value = 0 subtract = minor_ardor_value_double }
neg_medium_ardor_value_double = { value = 0 subtract = medium_ardor_value_double }
neg_major_ardor_value_double = { value = 0 subtract = major_ardor_value_double }
neg_massive_ardor_value_double = { value = 0 subtract = massive_ardor_value_double }

ardor_bin_0 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 100
            floor = yes
        }
        modulo = 2
    }
}

ardor_bin_1 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 200
            floor = yes
        }
        modulo = 2
    }
}

ardor_bin_2 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 400
            floor = yes
        }
        modulo = 2
    }
}

ardor_bin_3 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 800
            floor = yes
        }
        modulo = 2
    }
}

ardor_bin_4 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 1600
            floor = yes
        }
        modulo = 2
    }
}

ardor_bin_5 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 3200
            floor = yes
        }
        modulo = 2
    }
}

ardor_bin_6 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 6400
            floor = yes
        }
        modulo = 2
    }
}

ardor_bin_7 = {
    value = {
        add = {
            value = var:ardor_display
            divide = 12800
            floor = yes
        }
        modulo = 2
    }
}

# test if scoping to player ardor value then using EmptyScope.ScriptValue('ardor_prog_test') in progressbar works
# also test if it works as a stretch factor
# ardor_prog_test = {
#     value = player.var:ardor_display
# }