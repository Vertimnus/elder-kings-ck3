# Called from code after history generation
# Empty scope
ek_on_game_start = {
	effect = {
		### Create a list with every culture. Because Paradox has every_faith, but not every_culture :(
		# Akaviri
		startup_culture_effect = { CULTURE = hakoshae }
		startup_culture_effect = { CULTURE = jaegi }
		startup_culture_effect = { CULTURE = tsaesci }
		# Aldmeris
		startup_culture_effect = { CULTURE = alinor }
		startup_culture_effect = { CULTURE = auridon }
		startup_culture_effect = { CULTURE = balfiera }
		startup_culture_effect = { CULTURE = corelanya }
		# Ayleid
		startup_culture_effect = { CULTURE = ayleid }
		startup_culture_effect = { CULTURE = barsaebic }
		startup_culture_effect = { CULTURE = hectahamic }
		# Bosmeris
		startup_culture_effect = { CULTURE = pactbosmer }
		startup_culture_effect = { CULTURE = civicbosmer }
		startup_culture_effect = { CULTURE = arenthian }
		# Breton
		startup_culture_effect = { CULTURE = glenumbran }
		startup_culture_effect = { CULTURE = northmen }
		startup_culture_effect = { CULTURE = iliac }
		startup_culture_effect = { CULTURE = bjoule }
		startup_culture_effect = { CULTURE = bretic }
		# Chimeris
		startup_culture_effect = { CULTURE = chimer }
		startup_culture_effect = { CULTURE = chimeriquey }
		startup_culture_effect = { CULTURE = cantemiric }
		# Dunmeris
		startup_culture_effect = { CULTURE = dunmer }
		startup_culture_effect = { CULTURE = ashlander }
		# Goblinken
		startup_culture_effect = { CULTURE = goblin }
		startup_culture_effect = { CULTURE = riekling }
		# Cyrodiilic
		startup_culture_effect = { CULTURE = colovian }
		startup_culture_effect = { CULTURE = nibenese }
		startup_culture_effect = { CULTURE = blackwood }
		startup_culture_effect = { CULTURE = heartlander }
		# Khajiiti
		startup_culture_effect = { CULTURE = pellitinian }
		startup_culture_effect = { CULTURE = anequinan }
		startup_culture_effect = { CULTURE = baandari }
		# Nedic
		startup_culture_effect = { CULTURE = reachfolk }
		startup_culture_effect = { CULTURE = kothringi }
		startup_culture_effect = { CULTURE = galen }
		startup_culture_effect = { CULTURE = keptu }
		startup_culture_effect = { CULTURE = duraki }
		startup_culture_effect = { CULTURE = kreath }
		startup_culture_effect = { CULTURE = perena }
		startup_culture_effect = { CULTURE = gemha }
		startup_culture_effect = { CULTURE = karth }
		startup_culture_effect = { CULTURE = nede }
		# Nordic
		startup_culture_effect = { CULTURE = eastmarcher }
		startup_culture_effect = { CULTURE = westmarcher }
		startup_culture_effect = { CULTURE = cyro_nord }
		startup_culture_effect = { CULTURE = atmoran }
		startup_culture_effect = { CULTURE = skaal }
		# Orsimer
		startup_culture_effect = { CULTURE = mountain_orc }
		startup_culture_effect = { CULTURE = iron_orc }
		startup_culture_effect = { CULTURE = wood_orc }
		# Yoku
		startup_culture_effect = { CULTURE = yokudan }
		startup_culture_effect = { CULTURE = forebear }
		startup_culture_effect = { CULTURE = crown }
		startup_culture_effect = { CULTURE = lhotunic }
		startup_culture_effect = { CULTURE = alikr }
		startup_culture_effect = { CULTURE = abecean }
		startup_culture_effect = { CULTURE = horsemen }
		
		### Set which cultures are alive (have some territory)
		every_county = {
			culture = { save_scope_as = culture_to_save }
			add_to_global_variable_list = {
				name = culture_is_alive
				target = scope:culture_to_save
			}
		}
		
		### Nativity innovations
		## Build the list
		## Special
		set_culture_native_to = { REGION = nomadic CULTURE = culture:mountain_orc }
		set_culture_native_to = { REGION = nomadic CULTURE = culture:alikr }
		set_culture_native_to = { REGION = nomadic CULTURE = culture:horsemen }
		set_culture_native_to = { REGION = nomadic CULTURE = culture:baandari }
		set_culture_native_to = { REGION = nomadic CULTURE = culture:goblin }
		set_culture_native_to = { REGION = nomadic CULTURE = culture:bjoule }
		## High Rock
		# Glenumbra
		set_culture_native_to = { REGION = glenumbra CULTURE = culture:glenumbran }
		set_culture_native_to = { REGION = glenumbra CULTURE = culture:balfiera }
		set_culture_native_to = { REGION = glenumbra CULTURE = culture:galen }
		# Rivenspire
		set_culture_native_to = { REGION = rivenspire CULTURE = culture:northmen }
		set_culture_native_to = { REGION = rivenspire CULTURE = culture:galen }
		# Stormhaven
		set_culture_native_to = { REGION = stormhaven CULTURE = culture:iliac }
		set_culture_native_to = { REGION = stormhaven CULTURE = culture:galen }
		# Wrothgar
		set_culture_native_to = { REGION = greater_wrothgar CULTURE = culture:bretic }
		set_culture_native_to = { REGION = greater_wrothgar CULTURE = culture:reachfolk }
		# Bangkorai
		set_culture_native_to = { REGION = bangkorai CULTURE = culture:iliac }
		set_culture_native_to = { REGION = bangkorai CULTURE = culture:duraki }
		set_culture_native_to = { REGION = bangkorai CULTURE = culture:forebear }
		## Hammerfell
		# Craglorn
		set_culture_native_to = { REGION = craglorn CULTURE = culture:duraki }
		set_culture_native_to = { REGION = craglorn CULTURE = culture:iron_orc }
		# Alikr
		set_culture_native_to = { REGION = alikr CULTURE = culture:crown }
		set_culture_native_to = { REGION = alikr CULTURE = culture:corelanya }
		# Brena
		set_culture_native_to = { REGION = brena CULTURE = culture:forebear }
		# Sunforge
		set_culture_native_to = { REGION = sunforge CULTURE = culture:forebear }
		set_culture_native_to = { REGION = sunforge CULTURE = culture:keptu }
		# Abecee
		set_culture_native_to = { REGION = abecee CULTURE = culture:abecean }
		set_culture_native_to = { REGION = abecee CULTURE = culture:corelanya }
		## Cyrodiil
		# Colovia
		set_culture_native_to = { REGION = colovia CULTURE = culture:colovian }
		set_culture_native_to = { REGION = colovia CULTURE = culture:cyro_nord }
		set_culture_native_to = { REGION = colovia CULTURE = culture:perena }
		# Heartlands
		set_culture_native_to = { REGION = heartlands CULTURE = culture:heartlander }
		set_culture_native_to = { REGION = heartlands CULTURE = culture:ayleid }
		# Nibenay
		set_culture_native_to = { REGION = nibenay CULTURE = culture:nibenese }
		set_culture_native_to = { REGION = nibenay CULTURE = culture:blackwood }
		set_culture_native_to = { REGION = nibenay CULTURE = culture:gemha }
		## Skyrim
		# Karth
		set_culture_native_to = { REGION = karth CULTURE = culture:reachfolk }
		# West Ghost
		set_culture_native_to = { REGION = west_ghost CULTURE = culture:westmarcher }
		# White River
		set_culture_native_to = { REGION = white_river CULTURE = culture:westmarcher }
		set_culture_native_to = { REGION = white_river CULTURE = culture:cyro_nord }
		set_culture_native_to = { REGION = white_river CULTURE = culture:kreath }
		# East Ghost
		set_culture_native_to = { REGION = east_ghost CULTURE = culture:eastmarcher }
		# Dark Water
		set_culture_native_to = { REGION = dark_water CULTURE = culture:eastmarcher }
		# Solstheim
		set_culture_native_to = { REGION = solstheim CULTURE = culture:skaal }
		set_culture_native_to = { REGION = solstheim CULTURE = culture:riekling }
		## Yokuda
		set_culture_native_to = { REGION = yokuda CULTURE = culture:yokudan }
		## Summerset Isles
		# Auridon
		set_culture_native_to = { REGION = auridon CULTURE = culture:auridon }
		# Summerset
		set_culture_native_to = { REGION = summerset CULTURE = culture:alinor }
		## Valenwood
		# Grahtwood
		set_culture_native_to = { REGION = grahtwood CULTURE = culture:pactbosmer }
		set_culture_native_to = { REGION = grahtwood CULTURE = culture:civicbosmer }
		set_culture_native_to = { REGION = grahtwood CULTURE = culture:wood_orc }
		set_culture_native_to = { REGION = grahtwood CULTURE = culture:hectahamic }
		# Greenshade
		set_culture_native_to = { REGION = greenshade CULTURE = culture:pactbosmer }
		set_culture_native_to = { REGION = greenshade CULTURE = culture:civicbosmer }
		# Malabal Tor
		set_culture_native_to = { REGION = malabal_tor CULTURE = culture:pactbosmer }
		set_culture_native_to = { REGION = malabal_tor CULTURE = culture:civicbosmer }
		set_culture_native_to = { REGION = malabal_tor CULTURE = culture:wood_orc }
		# Reaper's March
		set_culture_native_to = { REGION = reaper_march CULTURE = culture:arenthian }
		set_culture_native_to = { REGION = reaper_march CULTURE = culture:anequinan }
		## Elsweyr
		# Anequina
		set_culture_native_to = { REGION = anequina CULTURE = culture:anequinan }
		set_culture_native_to = { REGION = anequina CULTURE = culture:hakoshae }
		# Tenmar
		set_culture_native_to = { REGION = tenmar CULTURE = culture:pellitinian }
		# Pellitine
		set_culture_native_to = { REGION = pellitine CULTURE = culture:pellitinian }
		
		### Now that we know which cultures are native from which region, we can save every native culture in the county scope (genius, really)
		every_county = {
			save_temporary_scope_as = current_county
			# High Rock
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_glenumbra } }
				county_save_native_cultures = { REGION = glenumbra }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_rivenspire } }
				county_save_native_cultures = { REGION = rivenspire }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_stormhaven } }
				county_save_native_cultures = { REGION = stormhaven }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_greater_wrothgar } }
				county_save_native_cultures = { REGION = greater_wrothgar }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_bangkorai } }
				county_save_native_cultures = { REGION = bangkorai }
			}
			# Hammerfell
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_craglorn } }
				county_save_native_cultures = { REGION = craglorn }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_alikr } }
				county_save_native_cultures = { REGION = alikr }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_brena } }
				county_save_native_cultures = { REGION = brena }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_sunforge } }
				county_save_native_cultures = { REGION = sunforge }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_abecee } }
				county_save_native_cultures = { REGION = abecee }
			}
			# Cyrodiil
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_colovia } }
				county_save_native_cultures = { REGION = colovia }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_nibenay } }
				county_save_native_cultures = { REGION = nibenay }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_heartlands } }
				county_save_native_cultures = { REGION = heartlands }
			}
			# Skyrim
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_karth } }
				county_save_native_cultures = { REGION = karth }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_west_ghost } }
				county_save_native_cultures = { REGION = west_ghost }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_white_river } }
				county_save_native_cultures = { REGION = white_river }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_east_ghost } }
				county_save_native_cultures = { REGION = east_ghost }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_dark_water } }
				county_save_native_cultures = { REGION = dark_water }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_solstheim } }
				county_save_native_cultures = { REGION = solstheim }
			}
			# Yokuda
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_yokuda } }
				county_save_native_cultures = { REGION = yokuda }
			}
			# Summerset Isles
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_auridon } }
				county_save_native_cultures = { REGION = auridon }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_summerset } }
				county_save_native_cultures = { REGION = summerset }
			}
			# Valenwood
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_grahtwood } }
				county_save_native_cultures = { REGION = grahtwood }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_greenshade } }
				county_save_native_cultures = { REGION = greenshade }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_malabal_tor } }
				county_save_native_cultures = { REGION = malabal_tor }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_reaper_march } }
				county_save_native_cultures = { REGION = reaper_march }
			}
			# Elsweyr
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_anequina } }
				county_save_native_cultures = { REGION = anequina }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_tenmar } }
				county_save_native_cultures = { REGION = tenmar }
			}
			if = {
				limit = { this.title_province = { geographical_region = custom_nativity_pellitine } }
				county_save_native_cultures = { REGION = pellitine }
			}
		}
		
		### Some religious tweaks
		every_religion_global = {
			every_faith = {
				## DOCTRINE_GENDER
				if = {
					limit = {
						OR = {
							has_doctrine = doctrine_pantheon_daedra
							# Prince specific
							has_doctrine = doctrine_pantheon_azura
							has_doctrine = doctrine_pantheon_boethiah
							has_doctrine = doctrine_pantheon_clavicus
							has_doctrine = doctrine_pantheon_hermaeus
							has_doctrine = doctrine_pantheon_hircine
							has_doctrine = doctrine_pantheon_malacath
							has_doctrine = doctrine_pantheon_mehrunes
							has_doctrine = doctrine_pantheon_mephala
							has_doctrine = doctrine_pantheon_meridia
							has_doctrine = doctrine_pantheon_molag
							has_doctrine = doctrine_pantheon_namira
							has_doctrine = doctrine_pantheon_nocturnal
							has_doctrine = doctrine_pantheon_peryite
							has_doctrine = doctrine_pantheon_sanguine
							has_doctrine = doctrine_pantheon_sheogorath
							has_doctrine = doctrine_pantheon_vaermina
							# Special group of princes
							has_doctrine = doctrine_pantheon_good_daedra
							has_doctrine = doctrine_pantheon_bad_daedra
						}
						NOT = { has_doctrine = special_doctrine_daedra_worshipper }
					}
					add_doctrine = special_doctrine_daedra_worshipper
				}
			}
		}
		
		### Innovations
		# Cultural & regional
		culture:alinor = { add_innovation = innovation_moonstone_armor }
		culture:auridon = { add_innovation = innovation_moonstone_armor }
		culture:balfiera = { add_innovation = innovation_moonstone_armor }
		
		culture:heartlander = { add_innovation = innovation_seat_of_empires }
		culture:nibenese = { add_innovation = innovation_seat_of_empires }
		culture:colovian = { add_innovation = innovation_seat_of_empires }
		
		# Cultural MaA
		culture:skaal = { add_innovation = innovation_skaal_hunter }
		
		culture:colovian = { add_innovation = innovation_armored_legionaires }
		culture:nibenese = { add_innovation = innovation_nibenese_battlemages }
		culture:heartlander = { add_innovation = innovation_armored_legionaires }
		culture:heartlander = { add_innovation = innovation_nibenese_battlemages }
		
		culture:yokudan = { add_innovation = innovation_way_of_the_sword }
		culture:forebear = { add_innovation = innovation_way_of_the_sword }
		culture:crown = { add_innovation = innovation_way_of_the_sword }
		culture:alikr = { add_innovation = innovation_way_of_the_sword }
		culture:abecean = { add_innovation = innovation_abecean_pirates }
		
		culture:tsaesci = { add_innovation = innovation_akaviri_dragon_hunters }
		
		#############
		# BOOKMARKS #
		#############
		
		### FOUND THE ORDER OF THE EIGHT ###
		# Based in b_thalara
		title:b_thalara = { save_scope_as = ote_hq }
		scope:ote_hq.holder.top_liege = { save_scope_as = ote_patron }
		
		# A big copy paste of the decision effect, hopefully it'll work
		hidden_effect = {
			if = {
				limit = { NOT = { scope:ote_hq.holder = scope:ote_patron } }
				create_title_and_vassal_change = {
					type = leased_out
					save_scope_as = change
					add_claim_on_loss = no
				}
				scope:ote_hq = {
					change_title_holder_include_vassals = {
						holder = scope:ote_patron
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
		}

		scope:ote_patron = {
			### Important, make sure that scope:base_char is defined and references the holy order patron
			scope:ote_patron = { save_scope_as = base_char }
			create_character = {
				template = holy_order_leader_character
				location = scope:ote_hq.title_province
				save_scope_as = leader
			}

			create_holy_order = {
				leader = scope:leader
				capital = scope:ote_hq
				save_scope_as = new_holy_order
			}

			### EK TODO: Make that work somehow
			scope:new_holy_order.title = { set_title_name = order_of_the_eight }
			
			hidden_effect = {
				scope:leader = {
					add_gold = 100 #So that they have some money to lend out
					add_piety_level = 2
					add_gold = holy_order_starting_gold
					every_courtier = {
						add_trait = order_member
					}
				}
			}
		}
		
		### 2E440 BOOKMARK ###
		## Assassination of Logrolf, the High King of Skyrim, by a lowly noble on the order of Svartr
		# The lowly noble then joined Western Skyrim and received lands and a wife for his services
		character:cursebraid_1000 = { save_scope_as = hk_svartr }
		character:bannertorn_100 = { save_scope_as = logrolf_murderer }
		character:flamehair_999 = { save_scope_as = hk_logrolf }
		
		if = {
			limit = {
				scope:logrolf_murderer = { is_alive = yes }
				scope:hk_svartr = { is_alive = yes }
			}
			
			# The noble first tried, without success, to kill Logrolf... Svartr knows it, and used the hook to force the noble to *again* try to kill his liege. Once the murder was successful, the two strong hooks cancelled each other out.
		
			# Svartr knows the murder attempt...
			scope:logrolf_murderer = {
				random_secret = {
					limit = {
						secret_type = secret_murder_attempt
						NOT = { is_known_by = scope:hk_svartr }
					}
					save_scope_as = logrolf_murder_attempt_secret
					
					# Svartr knows
					reveal_to = scope:hk_svartr
					# Used it to force the agent to kill his liege
					scope:hk_svartr = { blackmail_target_with_secret_effect = { SECRET = scope:logrolf_murder_attempt_secret TARGET = scope:logrolf_murderer } }
					# And then the two hooks cancelled each other
					scope:hk_svartr = { remove_hook = { target = scope:logrolf_murderer } }
				}
			}
		
			# And the lowly noble knows who killed Logrolf...
			scope:hk_svartr = {
				random_secret = {
					limit = {
						secret_type = secret_murder
						NOT = { is_known_by = scope:logrolf_murderer }
					}
					save_scope_as = logrolf_murder_proper_secret
					
					reveal_to = scope:logrolf_murderer
					# Mainly so Svartr can't be blackmailed *again*
					# The safe passage to Western Skyrim and the rewards can be counted as "blackmail"
					scope:logrolf_murderer = { blackmail_target_with_secret_effect = { SECRET = scope:logrolf_murder_proper_secret TARGET = scope:hk_svartr } }
					scope:logrolf_murderer = { remove_hook = { target = scope:hk_svartr } }
				}
			}
		}
	}
}