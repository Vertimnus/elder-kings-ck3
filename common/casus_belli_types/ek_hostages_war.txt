### Heavily inspired from hostages_cb in CK2

hostages_war = {
	group = other
	
	allowed_for_character =	{
	}

	allowed_against_character = {
		scope:defender = {
			OR = {
				# Either holds a close character from scope:attacker prisoner
				any_prisoner = {
					OR = {
						is_spouse_of = scope:attacker
						has_friendly_relationship_with_character_trigger = { CHARACTER = scope:attacker } # Friend/Lover
						is_close_family_of = scope:attacker
						this.dynasty = scope:attacker.dynasty
						is_consort_of = scope:attacker
					}
				}
				# Or has taken a character from scope:attacker's court as concubine
				any_courtier = {
					OR = {
						is_spouse_of = scope:attacker
						has_friendly_relationship_with_character_trigger = { CHARACTER = scope:attacker } # Friend/Lover
						is_close_family_of = scope:attacker
						this.dynasty = scope:attacker.dynasty
						is_consort_of = scope:attacker
					}
					has_opinion_modifier = {
						modifier = forced_me_concubine_marriage_opinion
						target = scope:defender
					}
				}
			}
		}
	}

	target_de_jure_regions_above = yes

	valid_to_start = {
	}

	should_invalidate = {
	}

	### EK TODO: CK2 gave the option to release/execute the captives
	on_declaration = {
		#on_declared_war = yes
	}

	on_victory_desc = {
		desc = hostages_war_victory_desc
	}

	on_victory = {
		### Get some prestige, some cash, some renown if same dynasty, even more if same house
		# Get weak hook on everyone you saved (favor), as well as some opinion
		scope:attacker = { show_pow_release_message_effect = yes }
		
		scope:attacker = { add_prestige = medium_prestige_gain }
		scope:defender = { add_prestige = medium_prestige_loss }
		
		scope:defender = {
			pay_short_term_gold = {
				gold = 3
				target = scope:attacker
				yearly_income = yes
			}
		}
		
		scope:defender = {
			every_prisoner = {
				limit = {
					OR = {
						is_spouse_of = scope:attacker
						has_friendly_relationship_with_character_trigger = { CHARACTER = scope:attacker } # Friend/Lover
						is_close_family_of = scope:attacker
						this.dynasty = scope:attacker.dynasty
						is_consort_of = scope:attacker
					}
				}
				
				add_to_temporary_list = hostages_war_prisoners_freed
			}
			
			every_courtier = {
				limit = {
					OR = {
						is_spouse_of = scope:attacker
						has_friendly_relationship_with_character_trigger = { CHARACTER = scope:attacker } # Friend/Lover
						is_close_family_of = scope:attacker
						this.dynasty = scope:attacker.dynasty
						is_consort_of = scope:attacker
					}
					has_opinion_modifier = {
						modifier = forced_me_concubine_marriage_opinion
						target = scope:defender
					}
				}
				
				add_to_temporary_list = hostages_war_prisoners_freed
			}
		}
		
		every_in_list = {
			list = hostages_war_prisoners_freed
			
			save_scope_as = current_prisoner
			
			# Concubines are released
			if = {
				limit = {
					is_concubine = yes
					OR = {
						AND = { # They either have the same top liege
							exists = concubinist.top_liege
							exists = scope:defender.top_liege
							concubinist.top_liege = scope:defender.top_liege
						}
						# Or the concubinist is the defender
						concubinist = scope:defender
					}
				}
				scope:defender = { remove_concubine = scope:current_prisoner }
			}
			
			# Marriages are annuled
			if = {
				limit = {
					is_married = yes
					any_spouse = {
						OR = {
							AND = { # They either have the same top liege
								exists = this.top_liege
								exists = scope:defender.top_liege
								this.top_liege = scope:defender.top_liege
							}
							# Or the concubinist is the defender
							this = scope:defender
						}
					}
				}
				
				scope:defender = { divorce = scope:current_prisoner }
			}
			
			# Prisoners are freed
			if = {
				limit = { is_imprisoned_by = scope:defender }
				release_from_prison = yes
			}
			
			# Freed characters are moved to scope:attacker's court, as guests
			if = {
				limit = {
					# Concubines and wives of landed characters aren't moved
					OR = {
						is_concubine = no
						AND = {
							is_concubine = yes
							concubinist = { is_landed = no }
						}
					}
					OR = {
						is_married = no
						AND = {
							is_married = yes
							primary_spouse = { is_landed = no }
						}
					}
				}
				scope:attacker = { recruit_courtier = scope:current_prisoner }
			}
			
			# They are of course very grateful
			add_opinion = { modifier = grateful_opinion target = scope:attacker opinion = 30 }
			scope:attacker = { add_hook = { target = scope:current_prisoner type = favor_hook } }
			
			# Give some renown
			if = {
				limit = {
					exists = scope:current_prisoner.dynasty
					exists = scope:attacker.dynasty
					scope:current_prisoner.dynasty = scope:attacker.dynasty
				}
				if = {
					limit = {
						exists = scope:current_prisoner.house_head
						exists = scope:attacker.house_head
						scope:current_prisoner.house_head = scope:attacker.house_head
					}
					
					scope:attacker.dynasty = { add_dynasty_prestige = minor_dynasty_prestige_gain }
				}
				
				else = {
					scope:attacker.dynasty = { add_dynasty_prestige = miniscule_dynasty_prestige_value }
				}
			}
		}
	}

	on_white_peace_desc = {
		desc = hostages_war_white_peace_desc
	}

	on_white_peace = {
		scope:attacker = { 
			show_pow_release_message_effect = yes
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}
	}

	on_defeat_desc = {
		desc = hostages_war_defeat_desc
	}

	on_defeat = {
		# Pay lot of cash, lose some renown
		scope:attacker = { show_pow_release_message_effect = yes }
		
		scope:attacker = { add_prestige = medium_prestige_loss }
		scope:defender = { add_prestige = medium_prestige_gain }
		
		scope:attacker = {
			pay_short_term_gold = {
				gold = 3
				target = scope:defender
				yearly_income = yes
			}
		}
		
		scope:attacker = {
			if = {
				limit = { exists = this.dynasty }
				this.dynasty = { add_dynasty_prestige = medium_dynasty_prestige_loss }
			}
		}
	}

	on_invalidated_desc = msg_invalidate_war_title

	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = no
	defender_allies_inherit = yes

	war_name = "HOSTAGES_WAR_NAME"

	interface_priority = 80

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 50

	max_ai_diplo_distance_to_title = 500
}
