window = {
	name = "decisions_view"
	parentanchor = top|right
	layer = windows_layer
	movable = no

	using = Window_Size_MainTab

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		#using = Sound_WindowShow_Standard
		using = Window_Position_MainTab
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		#using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide

		#on_start = "[GetVariableSystem.Clear('patron_window_open')]"
		on_start = "[GetVariableSystem.Clear('decision_tab')]"
		#datacontext = "[GetScriptedGui('patron_clear')]" #done this way to avoid error in log about data being an invalid property
		on_start = "[GetScriptedGui('patron_clear').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
		on_start = "[GetVariableSystem.Clear( 'patron_decision_button' )]"
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 20

		#visible = "[Not(Or(GetVariableSystem.Exists( 'patron_window_open' ), GetVariableSystem.Exists( 'societies_window_open' )))]"
		visible = "[Not(GetVariableSystem.Exists( 'decision_tab' ))]"

		# using = Window_Background

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
			using = Window_Position_MainTab
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
			using = Window_Position_MainTab_Hide
		}

		widget = {
			size = { 100% 100% }

			vbox = {
				using = Window_Margins

				header_pattern = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "DECISIONS_VIEW_TITLE"
					}

					blockoverride "button_close"
					{
						onclick = "[DecisionsView.Close]"
					}
				}

				scrollbox = {
					name = "decision_scrollarea"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					background = {
						texture = "gfx/interface/skinned/illustrations/decisions.dds"
						margin = { -5 0 }
						fittype = end
						alpha = 0.4
						framesize = { 1200 848 }

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
							blend_mode = alphamultiply
						}
					}

					blockoverride "scrollbox_content"
					{
						name = "decisions_main_container"
						spacing = 20

						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_label_center = {
								text = "DECISIONS_VIEW_MAJOR_DECISIONS"
							}

							text_single = {
								visible = "[IsDataModelEmpty(DecisionsView.GetDecisions)]"
								text = "DECISIONS_VIEW_MAJOR_NOT_AVAILABLE"
								default_format = "#low;italic"
							}

							vbox = {
								name = "major_decisions"
								datamodel = "[DecisionsView.GetDecisions]"
								layoutpolicy_horizontal = expanding
								spacing = 5

								item = {
									button_decision_entry = {
										datacontext = "[DecisionsViewItem.GetDecision]"
										visible = "[Decision.IsMajor]"
										layoutpolicy_horizontal = expanding
										size = { -1 55 }

										blockoverride "size_illustration" {
											size = { 250 53 }
										}

										onclick = "[DecisionsViewItem.OnSelect]"
										onclick = "[PdxGuiTriggerAllAnimations('decisions_detail_refresh')]"
										down = "[DecisionsViewItem.IsSelected]"

										blockoverride "default_format" {
											default_format = "#medium"
										}
									}
								}
							}

						}

						divider_light = {
							layoutpolicy_horizontal = expanding
						}

						vbox = {
							name = "decisions_container"
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_label_center = {
								text = "DECISIONS_VIEW_DECISIONS"
							}

							vbox = {
								name = "regular_decisions"
								datamodel = "[DecisionsView.GetDecisions]"
								layoutpolicy_horizontal = expanding
								spacing = 5

								item = {
									button_decision_entry = {
										datacontext = "[DecisionsViewItem.GetDecision]"
										visible = "[Not(Decision.IsMajor)]"
										layoutpolicy_horizontal = expanding

										onclick = "[DecisionsViewItem.OnSelect]"
										onclick = "[PdxGuiTriggerAllAnimations('decisions_detail_refresh')]"
										down = "[DecisionsViewItem.IsSelected]"
									}
								}
							}
						}
					}
				}
			}
		}
	}

	margin_widget = {
		name = "patron_window"
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 20
		alwaystransparent = no

		#visible = "[GetVariableSystem.Exists( 'patron_window_open' )]"
		visible = "[GetVariableSystem.HasValue( 'decision_tab', 'patron' )]"

		# using = Window_Background

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
			using = Window_Position_MainTab

			#on_start = "[GetVariableSystem.Clear( 'patron_decision_button' )]"
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
			using = Window_Position_MainTab_Hide

			on_start = "[GetVariableSystem.Clear( 'patron_decision_button' )]"
		}

		widget = {
			size = { 100% 100% }
			#using = Window_Background
			#using = Window_Decoration_Thin

			vbox = {
				using = Window_Margins

				header_with_picture = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "PATRON_VIEW_TITLE"
					}

					blockoverride "button_close"
					{
						#datacontext = "[GetScriptedGui('patron_gui_close')]"
						#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						#onclick = "[GetVariableSystem.Clear( 'patron_window_open' )]"
						onclick = "[GetVariableSystem.Clear('decision_tab')]"
						onclick = "[DecisionsView.Close]"
					}

					blockoverride "illustration_texture"
					{
						texture = "gfx/interface/patron_window/header_patrons.dds" #replace as shrine pic?
					}
				}

				#Selection Tab
				vbox = {
					name = "patron_selection_tab"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					datacontext = "[GetScriptedGui('patron_selection_tab_toggle')]"
					visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

					#patron details
					hbox = {
						size = { 520 170 }
						margin = { 0 5 }
						spacing = 5

						background = {
							margin_left = 80
							margin_right = 80
							margin_top = 0
							margin_bottom = 0

							texture = "gfx/interface/component_tiles/tile_dark_area_02.dds"
							spriteType = Corneredstretched
							spriteborder = { 40 8 }

							modify_texture = {
								name = "mask"
								texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
								spriteType = Corneredstretched
								spriteborder = { 0 0 }
								blend_mode = alphamultiply
							}
							modify_texture = {
								name = "mask"
								texture = "gfx/interface/component_masks/mask_legacy_track.dds"
								spriteType = Corneredstretched
								spriteborder = { 0 0 }
								blend_mode = alphamultiply
							}
						}

						# Patron Icons #
						vbox = {
							visible = "[GetPlayer.MakeScope.Var('patron_shown').IsSet]"
							#Azura
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('azura') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_azura.dds"
								}
							}

							#Boethiah
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('boethiah') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_boethiah.dds"
								}
							}

							#Clavicus Vile
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('clavicus') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_clavicus.dds"
								}
							}

							#Hermaeus Mora
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('hermaeus') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_hermaeus.dds"
								}
							}

							#Hircine
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('hircine') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_hircine.dds"
								}
							}

							#Jyggalag
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('jyggalag') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_jyggalag.dds"
								}
							}

							#Malacath
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('malacath') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_malacath.dds"
								}
							}

							#Mehrunes Dagon
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('mehrunes') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_mehrunes.dds"
								}
							}

							#Mephala
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('mephala') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_mephala.dds"
								}
							}

							#Meridia
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('meridia') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_meridia.dds"
								}
							}

							#Molag Bal
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('molag') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_molag.dds"
								}
							}

							#Namira
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('namira') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_namira.dds"
								}
							}

							#Nocturnal
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('nocturnal') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_nocturnal.dds"
								}
							}

							#Peryite
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('peryite') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_peryite.dds"
								}
							}

							#Sanguine
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('sanguine') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_sanguine.dds"
								}
							}

							#Sheogorath
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('sheogorath') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_sheogorath.dds"
								}
							}

							#Vaermina
							button_patron_icon = {
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('vaermina') )]"

								blockoverride "patron_icon" {
									texture = "gfx/interface/patrons/patron_vaermina.dds"
								}
							}
						}

						vbox = {
							size = { 470 160 }

							vbox = {
								#parentanchor = left
								text_single = {
									text = selected_patron_name #defined by custom loc
									align = center
									fontsize = 20
								}
								text_multi = {
									text = selected_patron_desc #defined by custom loc
									size = { 450 150 }
									maximumsize = { 450 150 }
									align = center
									fontsize = 16
									autoresize = yes
								}
								spacer = {
									size = { 0 15 }
								}
								button_frontend = {
									name = "patron_button_commune"
									#position = { 0 5 }
									size = { 160 40 }
									text = "COMMUNE"
									tooltip = patron_commune_tt

									datacontext = "[GetScriptedGui('patron_interaction_tab_toggle')]"
									visible = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									#enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									# visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								}
							}
						}
					}

					#patron list
					scrollbox = {
						name = "patrons_scrollarea"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						background = {
							texture = "gfx/interface/illustrations/event_scenes/temple.dds"
							margin = { -5 0 }
							fittype = end
							alpha = 0.4
							framesize = { 1200 848 }

							modify_texture = {
								texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
								blend_mode = alphamultiply
							}
						}

						blockoverride "scrollbox_content"
						{
							name = "patrons_main_container"
							spacing = 20

							vbox = {
								layoutpolicy_horizontal = expanding
								spacing = 10

								text_single = {
									datacontext = "[GetScriptedGui('patron_has_no_patrons')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text = "NO_PATRONS"
									default_format = "#low;italic"
								}

								text_label_center = {
									datacontext = "[GetScriptedGui('patron_has_princes')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text = "PATRON_DAEDRIC_PRINCES"
								}

								# Azura #
								vbox = {
									name = "patron_azura"
									datacontext = "[GetScriptedGui('patron_azura_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_azura_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'azura' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_azura.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_azura_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_azura_long_desc
										}
									}
								}

								# Boethiah #
								vbox = {
									name = "patron_boethiah"
									datacontext = "[GetScriptedGui('patron_boethiah_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_boethiah_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'boethiah' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_boethiah.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_boethiah_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_boethiah_long_desc
										}
									}
								}

								# Clavicus Vile #
								vbox = {
									name = "patron_clavicus"
									datacontext = "[GetScriptedGui('patron_clavicus_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_clavicus_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'clavicus' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_clavicus.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_clavicus_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_clavicus_long_desc
										}
									}
								}

								# Hermaeus Mora #
								vbox = {
									name = "patron_hermaeus"
									datacontext = "[GetScriptedGui('patron_hermaeus_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_hermaeus_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'hermaeus' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_hermaeus.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_hermaeus_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_hermaeus_long_desc
										}
									}
								}

								# Hircine #
								vbox = {
									name = "patron_hircine"
									datacontext = "[GetScriptedGui('patron_hircine_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_hircine_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'hircine' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_hircine.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_hircine_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_hircine_long_desc
										}
									}
								}

								# Jyggalag #
								vbox = {
									name = "patron_jyggalag"
									datacontext = "[GetScriptedGui('patron_jyggalag_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_jyggalag_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'jyggalag' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_jyggalag.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_jyggalag_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_jyggalag_long_desc
										}
									}
								}

								# Malacath #
								vbox = {
									name = "patron_malacath"
									datacontext = "[GetScriptedGui('patron_malacath_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_malacath_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'malacath' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_malacath.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_malacath_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_malacath_long_desc
										}
									}
								}

								# Mehrunes Dagon #
								vbox = {
									name = "patron_mehrunes"
									datacontext = "[GetScriptedGui('patron_mehrunes_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_mehrunes_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'mehrunes' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_mehrunes.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_mehrunes_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_mehrunes_long_desc
										}
									}
								}

								# Mephala #
								vbox = {
									name = "patron_mephala"
									datacontext = "[GetScriptedGui('patron_mephala_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_mephala_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'mephala' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_mephala.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_mephala_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_mephala_long_desc
										}
									}
								}

								# Meridia #
								vbox = {
									name = "patron_meridia"
									datacontext = "[GetScriptedGui('patron_meridia_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_meridia_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'meridia' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_meridia.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_meridia_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_meridia_long_desc
										}
									}
								}

								# Molag Bal #
								vbox = {
									name = "patron_molag"
									datacontext = "[GetScriptedGui('patron_molag_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_molag_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'molag' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_molag.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_molag_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_molag_long_desc
										}
									}
								}

								# Namira #
								vbox = {
									name = "patron_namira"
									datacontext = "[GetScriptedGui('patron_namira_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_namira_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'namira' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_namira.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_namira_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_namira_long_desc
										}
									}
								}

								# Nocturnal #
								vbox = {
									name = "patron_nocturnal"
									datacontext = "[GetScriptedGui('patron_nocturnal_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_nocturnal_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'nocturnal' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_nocturnal.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_nocturnal_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_nocturnal_long_desc
										}
									}
								}

								# Peryite #
								vbox = {
									name = "patron_peryite"
									datacontext = "[GetScriptedGui('patron_peryite_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_peryite_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'peryite' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_peryite.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_peryite_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_peryite_long_desc
										}
									}
								}

								# Sanguine #
								vbox = {
									name = "patron_sanguine"
									datacontext = "[GetScriptedGui('patron_sanguine_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_sanguine_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'sanguine' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_sanguine.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_sanguine_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_sanguine_long_desc
										}
									}
								}

								# Sheogorath #
								vbox = {
									name = "patron_sheogorath"
									datacontext = "[GetScriptedGui('patron_sheogorath_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_sheogorath_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'sheogorath' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_sheogorath.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_sheogorath_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_sheogorath_long_desc
										}
									}
								}

								# Vaermina #
								vbox = {
									name = "patron_vaermina"
									datacontext = "[GetScriptedGui('patron_vaermina_shown')]"
									visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

									button_patron_entry = {
										#datacontext = "[GetScriptedGui('patron_vaermina_shown')]"
										onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'vaermina' ) )]"

										blockoverride "patron_entry_icon" {
											texture = "gfx/interface/patrons/patron_vaermina.dds"
										}
										blockoverride "patron_entry_name" {
											text = patron_vaermina_name
										}
										blockoverride "patron_entry_desc" {
											text = patron_vaermina_long_desc
										}
									}
								}
							}
						}
					}
				}

				#Interaction Tab
				vbox = {
					name = "patron_interaction_tab"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					spacing = 15
					datacontext = "[GetScriptedGui('patron_interaction_tab_toggle')]"
					visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

					vbox = {
						#maximumsize = { 600 400 }
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = growing
						margin = { 5 15 }
						margin_top = 0

						background = {
							using = Background_Area
						}

						widget = {
							size = { 0 150 }
							layoutpolicy_horizontal = expanding
							button_back = {
								name = "patron_button_back"
								parentanchor = vcenter|left
								position = { 20 0 }
								shortcut = "go_back"
								#clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_close"

								using = Animation_ShowHide_Standard

								datacontext = "[GetScriptedGui('patron_selection_tab_toggle')]" #need close desision detail view
								onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								onclick = "[PdxGuiWidget.TriggerAnimation( Select_CString( IsGameViewOpen('decision_detail'), 'decision_detail_close', '' ) )]"

								tooltip = patron_back_tt

								state = {
									name = "decision_detail_close"

									on_start = "[ToggleGameView('decision_detail')]"
								}
							}
							widget = {
								size = { 140 100 }
								parentanchor = vcenter|left
								position = { 60 0 }
								vbox = {
									text_single = {
										text = patron_status #defined by custom loc
										align = center
										fontsize = 16
									}
									text_single = {
										text = patron_worship_type #defined by custom loc
										align = center
										fontsize = 16
									}
								}
							}
							# Patron Icons #
							widget = {
								size = { 150 150 }
								visible = "[GetPlayer.MakeScope.Var('patron_shown').IsSet]"
								parentanchor = center

								#Azura
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('azura') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_azura.dds"
										#texture = "[Concatenate(Concatenate('gfx/interface/patrons/patron_', GetPlayer.MakeScope.Var('patron_selected').GetFlag), '.dds')]"
									}
								}

								#Boethiah
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('boethiah') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_boethiah.dds"
									}
								}

								#Clavicus Vile
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('clavicus') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_clavicus.dds"
									}
								}

								#Hermaeus Mora
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('hermaeus') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_hermaeus.dds"
									}
								}

								#Hircine
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('hircine') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_hircine.dds"
									}
								}

								#Jyggalag
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('jyggalag') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_jyggalag.dds"
									}
								}

								#Malacath
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('malacath') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_malacath.dds"
									}
								}

								#Mehrunes Dagon
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('mehrunes') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_mehrunes.dds"
									}
								}

								#Mephala
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('mephala') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_mephala.dds"
									}
								}

								#Meridia
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('meridia') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_meridia.dds"
									}
								}

								#Molag Bal
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('molag') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_molag.dds"
									}
								}

								#Namira
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('namira') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_namira.dds"
									}
								}

								#Nocturnal
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('nocturnal') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_nocturnal.dds"
									}
								}

								#Peryite
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('peryite') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_peryite.dds"
									}
								}

								#Sanguine
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('sanguine') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_sanguine.dds"
									}
								}

								#Sheogorath
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('sheogorath') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_sheogorath.dds"
									}
								}

								#Vaermina
								button_patron_icon = {
									visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('vaermina') )]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_vaermina.dds"
									}
								}
							}
							widget = {
								size = { 170 100 } #+30 compared to other one for button
								parentanchor = vcenter|right
								position = { -30 0 }
								vbox = {
									text_single = {
										text = patron_ardor #defined by custom loc
										align = center
										fontsize = 16
									}
									widget = {
										name = "ardor_widget"
										size = { 170 58 }

										#tooltip = "patron_ardor"
										#using = tooltip_ne

										hbox = {
											size = { 100 20}
											maximumsize = { 100 20}
											parentanchor = top|left
											position = { 53 19 }

											background = {
												texture = "gfx/interface/colors/white.dds"
												color = { 0.1 0.1 0.1 0.8 }
											}

											#gets the progress bar part
											widget = {
												layoutpolicy_horizontal = expanding
												layoutpolicy_vertical = expanding
												layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( FixedPointToFloat(GetPlayer.MakeScope.Var('ardor_display').GetValue), '(float)10000', '(int32)100' )]"

												progressbar_ardor = {
													#visible = "[GreaterThanOrEqualTo_int32(GetPlayer.GetStressLevel, '(int32)3')]"
													size = { 100% 100% }

													using = Animation_ShowHide_Standard

													blockoverride "bar_color"
													{
														texture = "gfx/interface/colors/red.dds"
													}

													blockoverride "bar_color_flow"
													{
														texture = "gfx/interface/colors/gold.dds"
														alpha = 0.7
													}
												}
											}
											#pushes the progress part to left
											widget = {
												layoutpolicy_horizontal = expanding
												layoutpolicy_vertical = expanding
												layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled( FixedPointToFloat(GetPlayer.MakeScope.Var('ardor_display').GetValue), '(float)10000', '(int32)100' )]"
											}
										}

										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/patron_window/ardor_bg.dds"

											icon = {
												parentanchor = vcenter
												position = { 19 2 }
												size = { 30 30 }

												texture = "gfx/interface/patron_window/icon_ardor.dds"
											}
										}
									}
								}
							}
						}

						divider_light = {
							layoutpolicy_horizontal = expanding
						}

						vbox = {
							layoutpolicy_horizontal = expanding

							text_single = {
								text = selected_patron_name #defined by custom loc
								align = center
								fontsize = 32
							}
							hbox = {
								layoutpolicy_horizontal = expanding
								widget = {
									#parentanchor = vcenter
									allow_outside = yes
									button_expand = {
										parentanchor = bottom|hcenter
										position = { -220 0 }
										tooltip = "show_hide_desc"
										using = tooltip_nw
										onclick = "[GetVariableSystem.Toggle('patron_hide_desc')]"
										#down = "[Not(GetVariableSystem.Exists('patron_hide_desc'))]"

										frame = "[Select_int32( GetVariableSystem.Exists('patron_hide_desc'), '(int32)2', '(int32)1' )]"

										oversound = "event:/SFX/UI/Generic/sfx_ui_generic_icon_pointer_over"
										clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_icon_select"
									}
									text_multi = {
										resizeparent = yes
										text = selected_patron_desc #defined by custom loc
										size = { 450 150 }
										maximumsize = { 450 150 }
										align = center
										fontsize = 20
										autoresize = yes
									}
								}
							}
							vbox = {
								visible = "[GetVariableSystem.Exists('patron_hide_desc')]"
								spacer = {
									size = { 0 8 }
								}
								divider_light = {
									layoutpolicy_horizontal = expanding
								}
								spacer = {
									size = { 0 6 }
								}
								text_multi = {
									text = selected_patron_long_desc #defined by custom loc
									size = { 450 150 }
									maximumsize = { 450 150 }
									align = center
									fontsize = 16
									autoresize = yes
								}
							}
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						margin_bottom = 15
						spacing = 15

						hbox = { #interaction lists, should be scrollbox somewhere. fire decisions
							name = "minor_interactions"
							#size = { 90% 250 }
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							margin = { 20 0 }
							spacing = 15

							vbox = {
								name = "minor_boons"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								#size = { 45% 250}
								minimumsize = { 0 250 }

								scrollbox = {
									name = "minor_boons_scrollarea"
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding

									background = {
										texture = "gfx/interface/colors/green.dds"
										spriteType = Corneredtiled
										spriteborder = { 1 1 }
										#margin = { -5 0 }
										#fittype = end
										alpha = 0.07 #offset for green brightness
										#framesize = { 260 400 }

										modify_texture = {
											texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
											blend_mode = alphamultiply
										}
									}

									blockoverride "scrollbox_content"
									{
										name = "minor_boons_container"
										spacing = 20

										text_label_center = {
											text = "PATRON_MINOR_BOONS"
										}
										vbox = {
											name = "minor_boons"
											datamodel = "[DecisionsView.GetDecisions]"
											layoutpolicy_horizontal = expanding
											spacing = 10

											item = {
												button_patron_decision_entry = {
													datacontext = "[DecisionsViewItem.GetDecision]"
													#visible = "[EqualTo_string( Localize(Concatenate( Decision.GetShortDescForPlayer, 'type' )), 'minor_boon' )]"
													visible = "[EqualTo_string( Decision.GetShortDescForPlayer, 'minor_boon' )]"
												}
											}
										}
									}
								}
							}

							vbox = {
								name = "offerings"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								#size = { 45% 250}
								minimumsize = { 0 250 }

								scrollbox = {
									name = "offerings_scrollarea"
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding

									background = {
										texture = "gfx/interface/colors/red.dds"
										spriteType = Corneredtiled
										spriteborder = { 1 1 }
										#margin = { -5 0 }
										#fittype = end
										alpha = 0.1
										#framesize = { 260 400 }

										modify_texture = {
											texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
											blend_mode = alphamultiply
										}
									}

									blockoverride "scrollbox_content"
									{
										name = "offerings_container"
										spacing = 20

										text_label_center = {
											text = "PATRON_OFFERINGS"
										}
										vbox = {
											name = "offerings"
											datamodel = "[DecisionsView.GetDecisions]"
											layoutpolicy_horizontal = expanding
											spacing = 10

											item = {
												button_patron_decision_entry = {
													datacontext = "[DecisionsViewItem.GetDecision]"
													#visible = "[EqualTo_string( Localize(Concatenate( Decision.GetShortDescForPlayer, 'type' )), 'offering' )]"
													visible = "[EqualTo_string( Decision.GetShortDescForPlayer, 'offering' )]"
												}
											}
										}
									}
								}
							}
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							margin = { 20 0 }

							vbox = {
								name = "major_boons"
								#size = { 90% 150}
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								minimumsize = { 0 150 }

								scrollbox = {
									name = "major_boons_scrollarea"
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding

									background = {
										texture = "gfx/interface/colors/blue.dds"
										spriteType = Corneredtiled
										spriteborder = { 1 1 }
										#margin = { -5 0 }
										#fittype = end
										alpha = 0.4
										#framesize = { 260 400 }

										modify_texture = {
											texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
											blend_mode = alphamultiply
										}
										modify_texture = {
											texture = "gfx/interface/component_masks/mask_fade_halfcircle.dds"
											rotate_uv = 3
											blend_mode = alphamultiply
										}
									}

									blockoverride "scrollbox_content"
									{
										name = "major_boons_container"
										spacing = 20

										text_label_center = {
											text = "PATRON_MAJOR_BOONS"
										}
										vbox = {
											name = "major_boons"
											datamodel = "[DecisionsView.GetDecisions]"
											layoutpolicy_horizontal = expanding
											spacing = 10

											item = {
												button_patron_major_decision_entry = {
													datacontext = "[DecisionsViewItem.GetDecision]"
													#visible = "[EqualTo_string( Localize(Concatenate( Decision.GetShortDescForPlayer, 'type' )), 'major_boon' )]"
													visible = "[EqualTo_string( Decision.GetShortDescForPlayer, 'major_boon' )]"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}

	margin_widget = {
		name = "societies_window"
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 20

		#visible = "[GetVariableSystem.Exists( 'societies_window_open' )]"
		visible = "[GetVariableSystem.HasValue( 'decision_tab', 'society' )]"

		# using = Window_Background

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
			using = Window_Position_MainTab
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
			using = Window_Position_MainTab_Hide
		}

		widget = {
			size = { 100% 100% }
			#using = Window_Background
			#using = Window_Decoration_Thin

			vbox = {
				using = Window_Margins

				header_with_picture = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "SOCIETIES_VIEW_TITLE"
					}

					blockoverride "button_close"
					{
						#datacontext = "[GetScriptedGui('societies_gui_close')]"
						#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						#onclick = "[GetVariableSystem.Clear('right_window_open')]"
						#onclick = "[GetVariableSystem.Clear( 'societies_window_open' )]"
						onclick = "[GetVariableSystem.Clear( 'decision_tab' )]"
						onclick = "[DecisionsView.Close]"
					}

					blockoverride "illustration_texture"
					{
						texture = "gfx/interface/patron_window/header_societies.dds" #replace as shrine pic?
					}
				}

				#Selection Tab

			}
		}
	}
	
	margin_widget = {
		name = "council_of_the_eight_window"
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 20

		visible = "[GetVariableSystem.HasValue( 'decision_tab', 'council_of_the_eight' )]"

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
			using = Window_Position_MainTab
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
			using = Window_Position_MainTab_Hide
		}

		widget = {
			size = { 100% 100% }
			
			vbox = {
				using = Window_Margins

				# Header picture
				header_with_picture = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "COUNCIL_OF_THE_EIGHT_VIEW_TITLE"
					}

					blockoverride "button_close"
					{
						onclick = "[GetVariableSystem.Clear( 'decision_tab' )]"
						onclick = "[DecisionsView.Close]"
					}

					blockoverride "illustration_texture"
					{
						texture = "gfx/interface/patron_window/header_council_of_the_eight.dds"
					}
				}

				# Leader
				vbox = {
					name = "council_of_the_eight_leader_tab"
					datacontext = "[GetGlobalVariable('leader_council_eight')]" # Get the CoE faith? It's a global variable
					minimumsize = { 0 350 }
					maximumsize = { 0 350 }
					
					text_single = {
						text = "council_of_the_eight_leader_name"
						align = center
						fontsize = 20
					}
					text_single = {
						text = "council_of_the_eight_archprimate_name"
						align = center
						fontsize = 20
					}
					text_single = {
						text = "council_of_the_eight_leader_fervor"
						align = center
						fontsize = 20
					}
					text_multi = {
						text = "council_of_the_eight_leader_fervor_equilibrium"
						align = center
						fontsize = 20
						maximumsize = { 450 150 }
						autoresize = yes
					}
					text_multi = {
						text = "council_of_the_eight_leader_fervor_equilibrium_tt"
						align = center
						fontsize = 15
						maximumsize = { 450 150 }
						autoresize = yes
					}
		
					background = {
						margin_left = 80
						margin_right = 80
						margin_top = 10
						margin_bottom = 10

						texture = "gfx/interface/component_tiles/tile_dark_area_01.dds"
						spriteType = Corneredstretched
						spriteborder = { 40 8 }

						modify_texture = {
							name = "mask"
							texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
							spriteType = Corneredstretched
							spriteborder = { 0 0 }
							blend_mode = alphamultiply
						}
						modify_texture = {
							name = "mask"
							texture = "gfx/interface/component_masks/mask_legacy_track.dds"
							spriteType = Corneredstretched
							spriteborder = { 0 0 }
							blend_mode = alphamultiply
						}
					}
				}

				# Members list
				vbox = {
					name = "council_of_the_eight_members_tab"
					minimumsize = { 0 500 }
					maximumsize = { 0 500 }
					
					vbox = {
						minimumsize = { 0 10 }
						maximumsize = { 0 10 }
						
						text_single = {
							text = "council_of_the_eight_members_tab_tt"
							align = center
							fontsize = 15
						}
					}
					
					vbox = {
						
						hbox = {
							visible = "[Or(GetGlobalVariable('council_eight_chapel_black_marsh').IsSet, Or(GetGlobalVariable('council_eight_chapel_cyrodiil').IsSet, GetGlobalVariable('council_eight_chapel_elsweyr').IsSet))]"
							margin = { 20 20 }
							layoutpolicy_horizontal = expanding
							
							vbox = {
								margin = { 0 20 }
								name = "council_of_the_eight_chapel_black_marsh"
								
								visible = "[GetGlobalVariable('council_eight_chapel_black_marsh').IsSet]"

								text_single = {
									text = "council_of_the_eight_chapel_black_marsh"
									align = center
									fontsize = 15
								}
							}
							
							vbox = {
								margin = { 0 20 }
								name = "council_of_the_eight_chapel_cyrodiil"
								
								visible = "[GetGlobalVariable('council_eight_chapel_cyrodiil').IsSet]"

								text_single = {
									text = "council_of_the_eight_chapel_cyrodiil"
									align = center
									fontsize = 15
								}
							}
							
							vbox = {
								margin = { 0 20 }
								name = "council_of_the_eight_chapel_elsweyr"
								
								visible = "[GetGlobalVariable('council_eight_chapel_elsweyr').IsSet]"

								text_single = {
									text = "council_of_the_eight_chapel_elsweyr"
									align = center
									fontsize = 15
								}
							}
						}
						
						hbox = {
							visible = "[Or(GetGlobalVariable('council_eight_chapel_hammerfell').IsSet, Or(GetGlobalVariable('council_eight_chapel_high_rock').IsSet, GetGlobalVariable('council_eight_chapel_morrowind').IsSet))]"
							margin = { 20 20 }
							layoutpolicy_horizontal = expanding
							
							vbox = {
								margin = { 0 20 }
								name = "council_of_the_eight_chapel_morrowind"
								
								visible = "[GetGlobalVariable('council_eight_chapel_morrowind').IsSet]"

								text_single = {
									text = "council_of_the_eight_chapel_morrowind"
									align = center
									fontsize = 15
								}
							}
							
							vbox = {
								margin = { 0 20 }
								name = "council_of_the_eight_chapel_hammerfell"
								
								visible = "[GetGlobalVariable('council_eight_chapel_hammerfell').IsSet]"

								text_single = {
									text = "council_of_the_eight_chapel_hammerfell"
									align = center
									fontsize = 15
								}
							}
							
							vbox = {
								margin = { 0 20 }
								name = "council_of_the_eight_chapel_high_rock"
								
								visible = "[GetGlobalVariable('council_eight_chapel_high_rock').IsSet]"

								text_single = {
									text = "council_of_the_eight_chapel_high_rock"
									align = center
									fontsize = 15
								}
							}
						}
						
						hbox = {
							visible = "[Or(GetGlobalVariable('council_eight_chapel_skyrim').IsSet, Or(GetGlobalVariable('council_eight_chapel_summerset').IsSet, GetGlobalVariable('council_eight_chapel_valenwood').IsSet))]"
							margin = { 20 20 }
							layoutpolicy_horizontal = expanding
							
							vbox = {
								margin = { 0 20 }
								name = "council_of_the_eight_chapel_skyrim"
								
								visible = "[GetGlobalVariable('council_eight_chapel_skyrim').IsSet]"

								text_single = {
									text = "council_of_the_eight_chapel_skyrim"
									align = center
									fontsize = 15
								}
							}
							
							vbox = {
								margin = { 0 20 }
								name = "council_of_the_eight_chapel_summerset"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								
								visible = "[GetGlobalVariable('council_eight_chapel_summerset').IsSet]"

								text_single = {
									text = "council_of_the_eight_chapel_summerset"
									align = center
									fontsize = 15
								}
							}
							
							vbox = {
								margin = { 0 20 }
								name = "council_of_the_eight_chapel_valenwood"
								
								visible = "[GetGlobalVariable('council_eight_chapel_valenwood').IsSet]"

								text_single = {
									text = "council_of_the_eight_chapel_valenwood"
									align = center
									fontsize = 15
								}
							}
						}
						
						text_single = {
							visible = "[Not(And(GetGlobalVariable('council_eight_chapel_high_rock').IsSet, And(GetGlobalVariable('council_eight_chapel_skyrim').IsSet, And(GetGlobalVariable('council_eight_chapel_cyrodiil').IsSet, And(GetGlobalVariable('council_eight_chapel_hammerfell').IsSet, And(GetGlobalVariable('council_eight_chapel_elsweyr').IsSet, And(GetGlobalVariable('council_eight_chapel_summerset').IsSet, And(GetGlobalVariable('council_eight_chapel_valenwood').IsSet, And(GetGlobalVariable('council_eight_chapel_black_marsh').IsSet, And(GetGlobalVariable('council_eight_chapel_morrowind').IsSet))))))))))]"
							
							text = "Chapels available: [SelectLocalization(GetGlobalVariable('council_eight_chapel_high_rock').IsSet,'','High Rock, ')][SelectLocalization(GetGlobalVariable('council_eight_chapel_skyrim').IsSet,'','Skyrim, ')][SelectLocalization(GetGlobalVariable('council_eight_chapel_summerset').IsSet,'','Summerset, ')][SelectLocalization(GetGlobalVariable('council_eight_chapel_elsweyr').IsSet,'','Elsweyr, ')][SelectLocalization(GetGlobalVariable('council_eight_chapel_valenwood').IsSet,'','Valenwood, ')][SelectLocalization(GetGlobalVariable('council_eight_chapel_cyrodiil').IsSet,'','Cyrodiil, ')][SelectLocalization(GetGlobalVariable('council_eight_chapel_black_marsh').IsSet,'','Black Marsh, ')][SelectLocalization(GetGlobalVariable('council_eight_chapel_morrowind').IsSet,'','Morrowind')]"
							align = center
							fontsize = 15
						}
						
						text_multi = {
							text = "council_of_the_eight_members_missing_chapels_tt"
							align = center
							fontsize = 15
							maximumsize = { 450 150 }
							autoresize = yes
						}
					}
					
					
					background = {
						margin_left = 80
						margin_right = 80
						margin_top = 10
						margin_bottom = 10

						texture = "gfx/interface/component_tiles/tile_dark_area_02.dds"
						spriteType = Corneredstretched
						spriteborder = { 40 8 }

						modify_texture = {
							name = "mask"
							texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
							spriteType = Corneredstretched
							spriteborder = { 0 0 }
							blend_mode = alphamultiply
						}
						modify_texture = {
							name = "mask"
							texture = "gfx/interface/component_masks/mask_legacy_track.dds"
							spriteType = Corneredstretched
							spriteborder = { 0 0 }
							blend_mode = alphamultiply
						}
					}
				}
			}
		}
	}
}

types Decisions
{
	type button_decision_entry = button_standard {
		size = { 300 45 }
		tooltip = SHOW_DECISION_TOOLTIP

		highlight_icon = {
			name = "icon"
			position = { 5 5 }
			size = { 40 40 }
			texture = "[Decision.GetIcon]"
			visible = no
		}

		widget = {
			scissor = yes
			parentanchor = right|top

			block "size_illustration" {
				size = { 250 43 }
			}

			icon = {
				name = "illustration"
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.7

				visible = "[Decision.IsPossibleForPlayer]"

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}

			highlight_icon = {
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.7

				visible = "[Not(Decision.IsPossibleForPlayer)]"

				effectname = "GreyedOut"

				tintcolor = { 0.6 0.6 0.6 0.7 }

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}
		}

		hbox = {
			margin = { 20 0 }
			margin_right = 10

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Decision.IsPossibleForPlayer]"
				default_format = "#clickable"
				align = nobaseline
			}

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title2"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
				block "default_format" {
					default_format = "#low"
				}
				align = nobaseline
			}

			highlight_icon = {
				size = { 30 30 }
				name = "not_possible"
				texture = "gfx/interface/icons/symbols/icon_cross.dds"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
			}
		}
	}
}

types Court
{
	type button_court = button_standard {
		size = { 300 45 }
		tooltip = SHOW_DECISION_TOOLTIP

		highlight_icon = {
			name = "icon"
			position = { 5 5 }
			size = { 40 40 }
			texture = "[Decision.GetIcon]"
			visible = no
		}

		widget = {
			scissor = yes
			parentanchor = right|top

			block "size_illustration" {
				size = { 250 43 }
			}

			icon = {
				name = "illustration"
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.7

				visible = "[Decision.IsPossibleForPlayer]"

				using = Mask_Rough_Edges

				# modify_texture = {
				# 	texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
				# 	blend_mode = alphamultiply
				# }
				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_right.dds"
					blend_mode = alphamultiply
					alpha = 1

				}
				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_right.dds"
					blend_mode = alphamultiply
					alpha = 0.5

				}
			}

			highlight_icon = {
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.7

				visible = "[Not(Decision.IsPossibleForPlayer)]"

				effectname = "GreyedOut"

				tintcolor = { 0.6 0.6 0.6 0.7 }

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}
		}

		hbox = {
			margin = { 20 0 }
			margin_right = 10

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Decision.IsPossibleForPlayer]"
				default_format = "#clickable"
				align = nobaseline
			}

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title2"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
				block "default_format" {
					default_format = "#low"
				}
				align = nobaseline
			}

			highlight_icon = {
				size = { 30 30 }
				name = "not_possible"
				texture = "gfx/interface/icons/symbols/icon_cross.dds"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
			}
		}
	}
}
Types Patrons
{
	Type button_patron_icon = button {
		size = { 150 150 }
		alwaystransparent = yes

		background = {
			texture = "gfx/interface/colors/red.dds"
			spriteType = Corneredtiled
			spriteborder = { 6 6 }
			shaderfile = "gfx/FX/pdxgui_default.shader"
			alpha = 0.5
			modify_texture = {
				name = "mask_1"
				texture = "gfx/interface/component_masks/mask_glow.dds"
				blend_mode = alphamultiply
				rotate_uv = 1
			}
			modify_texture = {
				name = "mask_2"
				texture = "gfx/interface/component_masks/mask_fade_circle.dds"
				blend_mode = alphamultiply
				rotate_uv = 1
			}
		}
		icon = {
			block "patron_icon" {
				texture = "gfx/interface/patrons/patron_daedra.dds"
			}
			size = { 128 128 }
			parentanchor = center
		}
	}

	Type button_patron_entry = button_standard {
		size = { 500 100 }
		maximumsize = { 500 100 }

		hbox = {
			button = {
				size = { 100 100 }
				alwaystransparent = yes
				background = {
					texture = "gfx/interface/component_tiles/tile_selected.dds"
					spriteType = Corneredtiled
					spriteborder = { 6 6 }
					shaderfile = "gfx/FX/pdxgui_default.shader"
				}
				icon = {
					block "patron_entry_icon" {
						texture = "gfx/interface/patrons/patron_daedra.dds"
					}
					size = { 84 84 }
					parentanchor = center
				}
				icon = {
					texture = "gfx/interface/component_tiles/tile_dark_area_02.dds"
					position = { 100 2 }
					size = { 396 96 }
					alwaystransparent = yes
					layer = bottom
					alpha = 0.7
					modify_texture = {
						name = "mask_1"
						texture = "gfx/interface/component_masks/mask_culture_era_tab.dds"
						blend_mode = alphamultiply
						rotate_uv = 0
					}
				}
			}

			spacer = {
				size = { 9 0 }
			}

			vbox = {
				spacer = {
					size = { 0 4 }
				}
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				hbox = {
					layoutpolicy_horizontal = expanding
					textbox = {
						font = StandardGameFont
						fontcolor = { 1 1 1 1 }
						fontsize = 16
						block "patron_entry_name" {
							text = patron_azura_name
						}
						autoresize = no
						layoutpolicy_horizontal = expanding
						elide = right
						minimumsize = { -1 16 }
						align = left
					}
				}
				spacer = {
					size = { 0 7 }
				}
				textbox = {
					font = StandardGameFont
					fontcolor = { 0.8 0.8 0.8 1 }
					fontsize = 12
					block "patron_entry_desc" {
						text = patron_azura_long_desc
					}
					autoresize = no
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					elide = right
					multiline = yes
					align = top|left
				}
				spacer = {
					size = { 0 3 }
				}
			}
			spacer = {
				size = { 9 0 }
			}
		}
	}

	Type button_patron_decision_entry = button_standard {
		size = { 200 40 }
		maximumsize = { 200 40 }

		#text = "[Decision.GetTitleForPlayer]"
		tooltip = "[Localize( Concatenate( Decision.GetShortDescForPlayer, 'tooltip' ) )]"

		onclick = "[OpenDecisionDetailView(Decision.Self)]"
		down = "[DecisionsViewItem.IsSelected]"
		#onclick = "[GetVariableSystem.Set( 'patron_decision_button', Decision.GetTitleForPlayer )]"
		#down = "[GetVariableSystem.HasValue( 'patron_decision_button', Decision.GetTitleForPlayer )]" #does this get cleared? also is it necessary
		#down = "[EqualTo_string( GetVariableSystem.Get( 'patron_decision_button' ), Decision.GetTitleForPlayer )]"

		widget = {
			scissor = yes
			parentanchor = right|top

			size = { 110 38 }

			icon = {
				name = "illustration"
				parentanchor = right|top
				size = { 110 44 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.4

				visible = "[Decision.IsPossibleForPlayer]"

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}

			highlight_icon = {
				parentanchor = right|top
				size = { 110 44 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.4

				visible = "[Not(Decision.IsPossibleForPlayer)]"

				effectname = "GreyedOut"

				tintcolor = { 0.6 0.6 0.6 0.7 }

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}
		}

		hbox = {
			margin = { 10 0 }

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Decision.IsPossibleForPlayer]"
				default_format = "#clickable"
				fontsize = 14
				align = nobaseline
			}

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title2"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
				default_format = "#low"
				fontsize = 14
				align = nobaseline
			}
		}
	}

	Type button_patron_major_decision_entry = button_standard {
		size = { 300 50 }
		maximumsize = { 300 50 }

		#text = "[Decision.GetTitleForPlayer]"
		tooltip = "[Localize( Concatenate( Decision.GetShortDescForPlayer, 'tooltip' ) )]"

		onclick = "[OpenDecisionDetailView(Decision.Self)]"
		down = "[DecisionsViewItem.IsSelected]"
		#onclick = "[GetVariableSystem.Set( 'patron_decision_button', Decision.GetTitleForPlayer )]"
		#down = "[GetVariableSystem.HasValue( 'patron_decision_button', Decision.GetTitleForPlayer )]"

		widget = {
			scissor = yes
			parentanchor = right|top

			size = { 165 48 }

			icon = {
				name = "illustration"
				parentanchor = right|top
				size = { 165 66 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.4

				visible = "[Decision.IsPossibleForPlayer]"

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}

			highlight_icon = {
				parentanchor = right|top
				size = { 165 66 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.4

				visible = "[Not(Decision.IsPossibleForPlayer)]"

				effectname = "GreyedOut"

				tintcolor = { 0.6 0.6 0.6 0.7 }

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}
		}

		hbox = {
			margin = { 10 0 }

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Decision.IsPossibleForPlayer]"
				default_format = "#clickable"
				fontsize = 18
				align = nobaseline
			}

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title2"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
				default_format = "#low"
				fontsize = 18
				align = nobaseline
			}
		}
	}
	Type progressbar_ardor = icon
	{
		shaderfile = "gfx/FX/repeat_texture.shader"
		alpha = 0.8

		block "bar_color"
		{
			# texture = "gfx/interface/colors/red.dds"
		}

		modify_texture = {
			texture = "gfx/interface/patron_window/mask_rough_edges_down_top.dds"
			spriteType = Corneredtiled
			spriteborder = { 20 20 }
			blend_mode = alphamultiply
			texture_density = 5
		}

		modify_texture = {
			texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
			blend_mode = alphamultiply
			alpha = 0.3
		}

		modify_texture = {
			texture = "gfx/interface/component_masks/mask_scratches.dds"
			blend_mode = alphamultiply
			spriteType = corneredtiled
			alpha = 0.3
			texture_density = 3
		}

		modify_texture = {
			name = "flash"
			texture = "gfx/interface/colors/white.dds"
			blend_mode = colordodge
			alpha = 0
		}

		modify_texture = {
			name = "clouds"
			texture = "gfx/interface/component_masks/mask_clouds_solid.dds"
			blend_mode = mask
			spriteType = corneredtiled
			texture_density = 1
		}

		modify_texture = {
			block "bar_color_flow"
			{
				# texture = "gfx/interface/colors/yellow.dds"
				alpha = 0.3
			}
			blend_mode = colordodge
		}

		state = {
			name = a
			next = b
			trigger_on_create = yes

			modify_texture = {
				name = "clouds"
				translate_uv = { 1 0 }
			}
		}

		state = {
			name = b
			next = a
			duration = 15

			modify_texture = {
				name = "clouds"
				translate_uv = { -1 0 }
			}
		}
	}
}