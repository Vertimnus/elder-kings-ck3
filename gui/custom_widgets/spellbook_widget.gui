
#######################################################
############### SPELLBOOK INTERACTION #################
#######################################################

window = {
    name = "spellbook_interaction_window"
    #datacontext = "[MarriageInteractionWindow.GetBaseWindow]"
    #datacontext = "[MatchmakerInteractionWindow.GetCharacterInteractionConfirmationWindow]"
    position = { 0 30 }
    parentanchor = center
    allow_outside = yes
    layer = middle

    using = Window_Size_CharacterList
    using = Window_Background
    using = Window_Decoration

    state = {
        name = _show
        using = Animation_FadeIn_Quick
        using = Sound_WindowShow_Standard
    }

    state = {
        name = _hide
        using = Animation_FadeOut_Quick
        using = Sound_WindowHide_Standard
    }

    vbox = {
        using = Window_Margins
        #set_parent_size_to_minimum = yes

        header_standard = {
            layoutpolicy_horizontal = expanding

            blockoverride "header_text"
            {
                text = "SPELLBOOK"
            }

            blockoverride "button_close"
            {
                #onclick = "[MatchmakerInteractionWindow.Close]"
                onclick = "[ExecuteConsoleCommand('GUI.ClearWidgets spellbook_interaction_window')]"
                onclick = "[GetScriptedGui('magicka_casting_spell').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                onclick = "[GetVariableSystem.Clear('alteration_show')]"
                onclick = "[GetVariableSystem.Clear('conjuration_show')]"
                onclick = "[GetVariableSystem.Clear('destruction_show')]"
                onclick = "[GetVariableSystem.Clear('illusion_show')]"
                onclick = "[GetVariableSystem.Clear('restoration_show')]"
            }

            icon_character_interaction = {}
        }

        ### Portrait / Info

        hbox = {
            name = "portraits_and_info"
            layoutpolicy_horizontal = expanding
            margin = { 10 5 }

            background = {
                using = Background_Area
            }

            #vbox = {
            #spacing = 12
            portrait_head = {
                datacontext = "[GetPlayer]"
                visible = "[GetPlayer.IsValid]"
            }
            #     hbox = {
            #         layoutpolicy_horizontal = expanding
            #         icon = {
            #             visible = "[And(Not(Character.IsDeadAndValid), Character.IsRuler)]"
            #             size = { 30 30 }
            #             texture = "gfx/interface/icons/icon_magicka.dds"
            #             #tooltip = magicka_value_char_view
            #         }
            #         text_single = {
            #             layoutpolicy_horizontal = growing
            #             name = "magicka"
            #             text = magicka_value
            #             align = left
            #         }
            #     }
            # }

            text_multi = {
                name = "info_text"
                multiline = yes
                autoresize = yes
                max_width = 250
                text = spell_casting_info
                align = center
                #using = Font_Size_Medium
            }

            portrait_head = {
                datacontext = "[GetPlayer.MakeScope.Var('spell_recipient').Char]"
                visible = "[And(Character.IsValid, Not(ObjectsEqual(GetPlayer.MakeScope.Var('spell_recipient').Char, GetPlayer)))]"

                blockoverride "portrait_transformation"
                {
                    portrait_scale = { -1 1 }
                    portrait_offset = { 1 0 }
                }
            }
            spacer = {
                size = { 110 0 }
                visible = "[ObjectsEqual(GetPlayer.MakeScope.Var('spell_recipient').Char, GetPlayer)]"
            }
        }

        hbox = {
            name = "tabs"
            layoutpolicy_horizontal = expanding
            margin = { 15 0 }

            button_tab = {
                name = "conjuration"
                size = { 0 70 }
                layoutpolicy_horizontal = expanding

                text = school_conjuration
                default_format = "#low"
                datacontext = "[GetScriptedGui('spell_school_conjuration')]"
                down = "[Not(ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
                onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

                using = tooltip_above
            }

            button_tab = {
                name = "destruction"
                size = { 0 70 }
                layoutpolicy_horizontal = expanding

                text = school_destruction
                default_format = "#low"
                datacontext = "[GetScriptedGui('spell_school_destruction')]"
                down = "[Not(ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
                onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

                using = tooltip_above
            }

            button_tab = {
                name = "alteration"
                size = { 0 70 }
                layoutpolicy_horizontal = expanding

                text = school_alteration
                default_format = "#low"
                datacontext = "[GetScriptedGui('spell_school_alteration')]"
                down = "[Not(ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
                onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

                using = tooltip_above
            }

            button_tab = {
                name = "illusion"
                size = { 0 70 }
                layoutpolicy_horizontal = expanding

                text = school_illusion
                default_format = "#low"
                datacontext = "[GetScriptedGui('spell_school_illusion')]"
                down = "[Not(ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
                onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

                using = tooltip_above
            }

            button_tab = {
                name = "restoration"
                size = { 0 70 }
                layoutpolicy_horizontal = expanding

                text = school_restoration
                default_format = "#low"
                datacontext = "[GetScriptedGui('spell_school_restoration')]"
                down = "[Not(ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
                onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

                using = tooltip_above
            }

            button_tab = {
                name = "necromancy"
                size = { 0 70 }
                layoutpolicy_horizontal = expanding

                text = school_necromancy
                default_format = "#low"
                datacontext = "[GetScriptedGui('spell_school_necromancy')]"
                down = "[Not(ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
                onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

                using = tooltip_above
            }
        }

        hbox = {
            name = "spell_lists"
            layoutpolicy_horizontal = expanding
            layoutpolicy_vertical = expanding
            margin = { 15 0 }

            scrollbox = {
                name = "destruction_list"
                layoutpolicy_horizontal = expanding
                layoutpolicy_vertical = expanding
                #visible = "[GetVariableSystem.Exists('destruction_show')]"

                blockoverride "scrollbox_empty"
                {
                    text = "NO_SPELLS"
                    #visible = "[Not(BlackmailInteractionWindow.HasSecrets)]"
                    visible = no
                }

                blockoverride "scrollbox_content"
                {
                    vbox = {
                        #GuiScope.SetRoot.GetRootScope.GetList or maybe AccessSelf
                        datamodel = "[GetPlayer.MakeScope.GetList('spell_list')]" #may be able to use variable list but not sure how to trigger specifiic effect
                        #datamodel = "[GuiScope.GetRootScope.GetList('spell_list_destruction')]" #may be able to use variable list but not sure how to trigger specifiic effect
                        layoutpolicy_horizontal = expanding
                        margin = { 15 15 }
                        spacing = 8

                        item = {
                            button_standard = {
                                layoutpolicy_horizontal = expanding

                                #datacontext = "[GetScriptedGui('spell_flames_caster')]"
                                datacontext = "[GetScriptedGui(Concatenate(Concatenate(GetPlayer.MakeScope.Var('spell_school').GetFlagName, '_spell_'), Concatenate(Localize(Scope.Province.Custom('SpellProvince')), '_caster')))]" #put the localize section in custom loc spell_$ID$
                                tooltip = "[ScriptedGui.IsValidTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                                enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                                onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                                down = "[GetScriptedGui(Concatenate(Concatenate(GetPlayer.MakeScope.Var('spell_school').GetFlagName, '_spell_'), Concatenate(Localize(Scope.Province.Custom('SpellProvince')), '_recipient'))).IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

                                #text = spell_flames
                                text = "[Localize(Concatenate(GetPlayer.MakeScope.Var('spell_school').GetFlagName, Concatenate('_spell_', Localize(Scope.Province.Custom('SpellProvince')))))]"
                                #text = "[GetNullCharacter.GetName]"
                            }
                        }
                    }
                }
            }
        }       

        vbox = {
            layoutpolicy_horizontal = expanding
            margin = { 0 10 }
            margin_bottom = 15
            spacing = 10

            vbox = {
                name = "effects"

                container = {
                    scrollbox = {
                        name = "effects_scrollarea"
                        autoresizescrollarea = yes
                        maximumsize = { -1 360 }
                        #visible = "[InteractionEffectsDescription.HasAnyAcceptEffect]"

                        blockoverride "scrollbox_content"
                        {
                            set_parent_size_to_minimum = yes

                            block "minimumsize" {
                                minimumsize = { 640 0 }
                            }

                            vbox = {
                                name = "effects"
                                layoutpolicy_horizontal = expanding
                                spacing = 10

                                ### Me
                                vbox = {
                                    name = "me"
                                    datacontext = "[GetPlayer]"
                                    #visible = "[InteractionEffectsDescription.HasActorAcceptEffect]"
                                    layoutpolicy_horizontal = expanding
                                    margin_bottom = 5

                                    background = {
                                        using = Background_Area_With_Header
                                    }

                                    text_single = {
                                        text = "EFFECTS_ON_ME"
                                        layoutpolicy_horizontal = expanding
                                        margin = { 15 4 }
                                    }

                                    hbox = {
                                        layoutpolicy_horizontal = expanding
                                        margin_top = 5
                                        spacing = 5
                                        margin_left = 6

                                        portrait_head = {
                                            blockoverride "opinion_box"
                                            {}
                                        }

                                        text_multi = {
                                            name = "effects_info"
                                            layoutpolicy_horizontal = expanding
                                            layoutpolicy_vertical = expanding
                                            autoresize = yes
                                            max_width = 375
                                            margin = { 5 10 }
                                            #text = "me effects"
                                            text = spell_caster_effect
                                        }

                                        expand = {}
                                    }
                                }

                                ### Recipient
                                vbox = {
                                    name = "recipient"
                                    datacontext = "[GetPlayer.MakeScope.Var('spell_recipient').Char]"
                                    #visible = "[InteractionEffectsDescription.HasRecipientAcceptEffect]"
                                    layoutpolicy_horizontal = expanding
                                    margin_bottom = 5

                                    background = {
                                        using = Background_Area_With_Header
                                    }

                                    text_single = {
                                        text = "EFFECTS_ON_ME"
                                        layoutpolicy_horizontal = expanding
                                        margin = { 15 4 }
                                    }

                                    hbox = {
                                        layoutpolicy_horizontal = expanding
                                        margin_top = 5
                                        spacing = 5
                                        margin_left = 10
                                        margin_right = 6

                                        text_multi = {
                                            name = "effects_info"
                                            layoutpolicy_horizontal = expanding
                                            layoutpolicy_vertical = expanding
                                            autoresize = yes
                                            max_width = 375
                                            margin = { 5 10 }
                                            #text = "them effect" #use custom loc here probably
                                            text = spell_castee_effect
                                        }

                                        expand = {}

                                        portrait_head = {
                                            #datacontext = "[InteractionEffectsDescription.GetRecipient]"
                                            blockoverride "opinion_box" {}
                                            blockoverride "portrait_transformation"
                                            {
                                                portrait_scale = { -1 1 }
                                                portrait_offset = { 1 0 }
                                            }
                                        }
                                    }
                                }

                                ### Others -province armies etc.
                                # vbox = {
                                #     name = "other_effects"
                                #     datamodel = "[InteractionEffectsDescription.GetOtherInteractionAcceptEffects]"
                                #     layoutpolicy_horizontal = expanding

                                #     item = {
                                #         hbox = {
                                #             layoutpolicy_horizontal = expanding
                                #             margin = { 0 5 }
                                #             spacing = 10

                                #             portrait_head = {
                                #                 name = "portrait"
                                #                 datacontext = "[InteractionOtherEffect.GetCharacter]"
                                #                 visible = "[InteractionOtherEffect.HasCharacter]"
                                #             }

                                #             container = {
                                #                 icon = {
                                #                     position = { 16 0 }
                                #                     size = { 50 50 }
                                #                     texture = "gfx/interface/icons/icon_group_of_characters.dds"
                                #                     visible = "[InteractionOtherEffect.IsList]"
                                #                     tooltip = "[InteractionOtherEffect.GetListTooltip]"
                                #                 }
                                #             }

                                #             text_multi = {
                                #                 layoutpolicy_horizontal = expanding
                                #                 layoutpolicy_vertical = expanding
                                #                 autoresize = yes
                                #                 max_width = 375
                                #                 text = "[InteractionOtherEffect.GetEffect]"
                                #                 align = left|vcenter
                                #             }

                                #             expand = {}
                                #         }
                                #     }
                                # }
                            }
                        }
                    }
                }
            }

            ### Send Button
            button_primary = {
                name = "send_offer_button"
                size = { 400 42 }
                enabled = "[Not(EqualTo_string( GetPlayer.MakeScope.Var('spell_selected').GetFlagName, 'unlanded'))]"
                onclick = "[GetScriptedGui('enable_casting').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                onclick = "[GetScriptedGui(Concatenate(Concatenate(GetPlayer.MakeScope.Var('spell_school').GetFlagName, '_spell_'), Concatenate(GetPlayer.MakeScope.Var('spell_selected').GetFlagName, '_caster'))).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                onclick = "[GetScriptedGui(Concatenate(Concatenate(GetPlayer.MakeScope.Var('spell_school').GetFlagName, '_spell_'), Concatenate(GetPlayer.MakeScope.Var('spell_selected').GetFlagName, '_recipient'))).Execute(GuiScope.SetRoot(GetPlayer.MakeScope.Var('spell_recipient').Char.MakeScope).End)]"

                onclick = "[ExecuteConsoleCommand('GUI.ClearWidgets spellbook_interaction_window')]"
                onclick = "[GetScriptedGui('magicka_casting_spell').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

                #text = "[SelectLocalization( BlackmailInteractionWindow.IsBlackmail, CharacterInteractionConfirmationWindow.GetSendName, 'INTRIGUE_WINDOW_SECRET_EXPOSE' )]"
                text = spell_confirm
                using = Font_Size_Medium

                #tooltip = "[BlackmailInteractionWindow.GetSendOfferTooltip]"
            }
        }
    }
}
